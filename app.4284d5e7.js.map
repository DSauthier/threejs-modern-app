{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/three/CopyShader.js","webpack:///./src/lib/three/Pass.js","webpack:///./src/lib/three/ShaderPass.js","webpack:///./src/lib/three/EffectComposer.js","webpack:///./src/lib/three/RenderPass.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/three/GLTFLoader.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/three/HDRCubeTextureLoader.js","webpack:///./src/lib/three/PMREMGenerator.js","webpack:///./src/lib/three/PMREMCubeUVPacker.js","webpack:///./src/lib/three/EquirectangularToCubeGenerator.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/scene/Suzanne.js","webpack:///./src/index.js","webpack:///./src/scene/shaders/pass.vert","webpack:///./src/scene/shaders/vignette.frag"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","THREE","uniforms","tDiffuse","opacity","vertexShader","join","fragmentShader","camera","geometry","FullScreenQuad","CopyShader","this","enabled","needsSwap","clear","renderToScreen","assign","setSize","width","height","render","renderer","writeBuffer","readBuffer","delta","maskActive","console","error","material","_mesh","set","Pass","shader","textureID","undefined","clone","defines","fsQuad","constructor","deltaTime","texture","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","ShaderPass","renderTarget","parameters","minFilter","magFilter","format","stencilBuffer","size","getDrawingBufferSize","renderTarget1","renderTarget2","passes","copyPass","_previousFrameTime","Date","now","swapBuffers","tmp","addPass","pass","insertPass","index","isLastEnabledPass","passIndex","currentRenderTarget","getRenderTarget","il","context","stencilFunc","NOTEQUAL","EQUAL","reset","dispose","EffectComposer","scene","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","RenderPass","WebGLApp","_this","_ref","arguments","_ref$background","background","_ref$backgroundAlpha","backgroundAlpha","_ref$fov","fov","_ref$near","near","_ref$far","far","options","_objectWithoutProperties","_classCallCheck","_updateListeners","writable","_tmpTarget","_rafID","_lastTime","resize","_ref2","_ref2$width","innerWidth","_ref2$height","innerHeight","_ref2$pixelRatio","pixelRatio","Math","min","maxPixelRatio","devicePixelRatio","getPixelRatio","setPixelRatio","isPerspectiveCamera","aspect","updateProjectionMatrix","composer","traverse","obj","draw","saveScreenshot","_ref3","_ref3$width","_ref3$height","_ref3$fileName","fileName","dataURI","canvas","toDataURL","blob","dataURIToBlob","link","document","createElement","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","saveDataURI","update","dt","time","orbitControls","up","fromArray","position","_classPrivateFieldLooseBase","target","lookAt","world","step","bodies","forEach","body","tween","fn","isLastElement","start","requestAnimationFrame","animate","isRunning","stop","cancelAnimationFrame","stats","begin","performance","maxDeltaTime","end","_len","args","Array","_key","child","_objectSpread","antialias","alpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","sortObjects","domElement","addEventListener","touchHandler","createTouches","filtered","on","ev","pos","postprocessing","createOrbitControls","element","parent","distance","showFps","Stats","showPanel","appendChild","dom","controls","controlsState","State","hideControls","wrapGUI","GLTFLoader","manager","dracoLoader","GLTFRegistry","objects","add","remove","removeAll","crossOrigin","load","url","onLoad","onProgress","onError","resourcePath","scope","path","extractUrlBase","itemStart","_onError","e","itemError","itemEnd","loader","setPath","setResponseType","parse","gltf","setCrossOrigin","setResourcePath","setDRACOLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","Error","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","indexOf","warn","GLTFParser","ddsLoader","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","range","type","spot","innerConeAngle","outerConeAngle","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","parser","pending","metallicRoughness","pbrMetallicRoughness","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","headerView","DataView","header","magic","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","specularGlossinessParams","params","pbrSpecularGlossiness","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","replace","roughness","metalness","roughnessMap","metalnessMap","specular","setHex","glossiness","specularMap","glossinessMap","STANDARD","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","refreshUniforms","group","uvScaleMap","diffuse","copy","multiplyScalar","isWebGLRenderTarget","matrixAutoUpdate","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","attribute","extendTexture","transform","offset","rotation","scale","repeat","texCoord","needsUpdate","copySampleValue_","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t1","stride","stride2","stride3","td","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","defaultMaterial","WEBGL_CONSTANTS","Number","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","image/png","image/jpeg","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","_typeof","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","keys","sort","cloneBufferAttribute","isInterleavedBufferAttribute","count","itemSize","getX","getY","getZ","getW","cache","primitiveCache","textureLoader","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","addAttribute","gltfAttributeName","indices","setIndex","targets","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","positionAttribute","jl","setXYZ","normalAttribute","morphAttributes","addMorphTargets","markDefs","getDependencies","dependencies","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibCacheKey","ib","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","Blob","mimeType","Handlers","flipY","sampler","samplers","wrapS","wrapT","mapName","mapDef","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","log","onBeforeRender","materialIndex","materialType","materialDef","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","cached","promise","meshIndex","depthTest","originalMaterials","geometries","normalizeSkinWeights","drawMode","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","interpolation","isMesh","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","children","light","sanitizeNodeName","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","isGroup","bones","boneInverses","jointNode","mat","matrixWorld","sceneIndex","sceneDef","nodeIds","_x","_x2","_loadTexture","_callee","image","regeneratorRuntime","wrap","_context","prev","next","setTextureParams","loadImage","crossorigin","sent","abrupt","concat","opt","mapping","isJPEG","search","generateMipmaps","hdrLoader","urls","RGBEByteToRGBFloat","sourceArray","sourceOffset","destArray","destOffset","pow","RGBEByteToRGBHalf","floatView","int32View","Int32Array","toHalf","val","x","bits","anisotropy","loaded","loadHDRData","texData","_parser","numElements","floatdata","halfdata","dataTexture","HDRCubeTextureLoader","shaderMaterial","SAMPLES_PER_LEVEL","faceIndex","mapSize","tFlip","blending","planeMesh","PMREMGenerator","sourceTexture","samplesPerLevel","resolution","monotonicEncoding","cubeLods","numLods","max","gammaInput","gammaOutput","toneMapping","toneMappingExposure","renderToCubeMapTarget","renderToCubeMapTargetFace","testColor","PMREMCubeUVPacker","cubeTextureLods","CubeUVRenderTarget","faceOffsets","textureResolution","offset2","nMips","mipOffsetX","mipOffsetY","mipSize","k","y","setScalar","left","right","top","bottom","fromEquirectangular","tEquirect","boxMesh","equirectangularMap","EquirectangularToCubeGenerator","views","u","v","loadEnvMap","_loadEnvMap","cubemapGenerator","cubeMapTexture","basePath","isHDR","equirectangular","buildCubeMap","hdr","prefix","postfix","cubeMap","pbr","level","pmremGenerator","pmremCubeUVPacker","idx","clamp","floor","AssetManager","TypeError","AssetManager_classPrivateFieldLooseBase","_cache","_onProgressListeners","AssetManager_objectWithoutProperties","_getQueued","_queue","AssetManager_objectSpread","_extractType","find","item","ext","lastIndexOf","itemLoadingStart","_loadItem","DEBUG","prettyMs","queue","total","_this2","loadingStart","pMap","_ref4","AssetManager_asyncToGenerator","mark","_callee2","percent","_context2","logError","_x3","_x4","concurrency","_asyncConcurrency","errors","_logs","filter","groupLog","err","fetch","response","arrayBuffer","text","_len2","_key2","_console","groupCollapsed","_console2","_toConsumableArray","groupEnd","lib_AssetManager","suzanneKey","assets","albedoKey","metalnessKey","roughnessKey","normalKey","hdrKey","Suzanne","webgl","Suzanne_objectWithoutProperties","Suzanne_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","suzanne","event","_slicedToArray","coords","raycaster","setFromCamera","hits","intersectObject","_ref5","_ref7","_ref6","angularVelocity","location","includes","querySelector","Slider","label","style","visibility","hemiLight","setHSL","groundColor","dirLight","castShadow","shadow","bias","addNaturalLight","screenshotButton","vignette","cursor","padding","fontSize","textContent"],"mappings":"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","file":"app.4284d5e7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([245,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as THREE from 'three'\n\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\":  { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\n\nexport const CopyShader = THREE.CopyShader","import * as THREE from 'three'\n\nTHREE.Pass = function () {\n  // if set to true, the pass is processed by the composer\n  this.enabled = true\n\n  // if set to true, the pass indicates to swap read and write buffer after rendering\n  this.needsSwap = true\n\n  // if set to true, the pass clears its buffer before rendering\n  this.clear = false\n\n  // if set to true, the result of the pass is rendered to screen\n  this.renderToScreen = false\n}\n\nObject.assign(THREE.Pass.prototype, {\n  setSize: function (width, height) {},\n\n  render: function (renderer, writeBuffer, readBuffer, delta, maskActive) {\n    console.error('THREE.Pass: .render() must be implemented in derived pass.')\n  },\n})\n\n// Helper for passes that need to fill the viewport with a single quad.\nTHREE.Pass.FullScreenQuad = (function () {\n  var camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1)\n  var geometry = new THREE.PlaneBufferGeometry(2, 2)\n\n  var FullScreenQuad = function (material) {\n    this._mesh = new THREE.Mesh(geometry, material)\n  }\n\n  Object.defineProperty(FullScreenQuad.prototype, 'material', {\n    get: function () {\n      return this._mesh.material\n    },\n\n    set: function (value) {\n      this._mesh.material = value\n    },\n  })\n\n  Object.assign(FullScreenQuad.prototype, {\n    render: function (renderer) {\n      renderer.render(this._mesh, camera)\n    },\n  })\n\n  return FullScreenQuad\n})()\n\nexport const Pass = THREE.Pass\n","import * as THREE from 'three'\nimport { Pass } from './Pass'\nTHREE.Pass = Pass\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.material );\n};\n\nTHREE.ShaderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n\n\nexport const ShaderPass = THREE.ShaderPass","import * as THREE from 'three'\nimport { CopyShader } from './CopyShader'\nTHREE.CopyShader = CopyShader\nimport { ShaderPass } from './ShaderPass'\nTHREE.ShaderPass = ShaderPass\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getDrawingBufferSize( new THREE.Vector2() );\n\t\trenderTarget = new THREE.WebGLRenderTarget( size.width, size.height, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( THREE.CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.CopyShader' );\n\n\t}\n\n\tif ( THREE.ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n\tthis._previousFrameTime = Date.now();\n\n};\n\nObject.assign( THREE.EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t\tvar size = this.renderer.getDrawingBufferSize( new THREE.Vector2() );\n\t\tpass.setSize( size.width, size.height );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\tisLastEnabledPass: function ( passIndex ) {\n\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = ( Date.now() - this._previousFrameTime ) * 0.001;\n\n\t\t}\n\n\t\tthis._previousFrameTime = Date.now();\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( THREE.MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getDrawingBufferSize( new THREE.Vector2() );\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( size.width, size.height );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis.renderTarget1.setSize( width, height );\n\t\tthis.renderTarget2.setSize( width, height );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( width, height );\n\n\t\t}\n\n\t}\n\n} );\n\n\nTHREE.Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( THREE.Pass.prototype, {\n\n\tsetSize: function ( width, height ) {},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\nTHREE.Pass.FullScreenQuad = ( function () {\n\n\tvar camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new THREE.PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new THREE.Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\n\nexport const EffectComposer = THREE.EffectComposer","import * as THREE from 'three'\nimport { Pass } from './Pass'\nTHREE.Pass = Pass\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\n\nexport const RenderPass = THREE.RenderPass","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/webgl/WebGLApp.js\nimport * as THREE from 'three'\nimport createOrbitControls from 'orbit-controls'\nimport createTouches from 'touches'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport State from 'controls-state'\nimport wrapGUI from 'controls-gui'\nimport { EffectComposer } from './three/EffectComposer'\nimport { RenderPass } from './three/RenderPass'\n\nexport default class WebGLApp {\n  #updateListeners = []\n  #tmpTarget = new THREE.Vector3()\n  #rafID\n  #lastTime\n\n  constructor({\n    background = '#000',\n    backgroundAlpha = 1,\n    fov = 45,\n    near = 0.01,\n    far = 100,\n    ...options\n  } = {}) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false,\n      // enabled for saving screenshots of the canvas,\n      // may wish to disable this for perf reasons\n      preserveDrawingBuffer: true,\n      failIfMajorPerformanceCaveat: true,\n      ...options,\n    })\n\n    this.renderer.sortObjects = false\n    this.canvas = this.renderer.domElement\n\n    this.renderer.setClearColor(background, backgroundAlpha)\n\n    // clamp pixel ratio for performance\n    this.maxPixelRatio = options.maxPixelRatio || 2\n    // clamp delta to stepping anything too far forward\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n    // setup a basic camera\n    this.camera = new THREE.PerspectiveCamera(fov, 1, near, far)\n\n    this.scene = new THREE.Scene()\n\n    this.time = 0\n    this.isRunning = false\n    this.#lastTime = performance.now()\n    this.#rafID = null\n\n    // handle resize events\n    window.addEventListener('resize', this.resize)\n    window.addEventListener('orientationchange', this.resize)\n\n    // force an initial resize event\n    this.resize()\n\n    // __________________________ADDONS__________________________\n\n    // really basic touch handler that propagates through the scene\n    this.touchHandler = createTouches(this.canvas, {\n      target: this.canvas,\n      filtered: true,\n    })\n    this.touchHandler.on('start', (ev, pos) => this.traverse('onPointerDown', ev, pos))\n    this.touchHandler.on('move', (ev, pos) => this.traverse('onPointerMove', ev, pos))\n    this.touchHandler.on('end', (ev, pos) => this.traverse('onPointerUp', ev, pos))\n\n    // expose a composer for postprocessing passes\n    if (options.postprocessing) {\n      this.composer = new EffectComposer(this.renderer)\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\n    }\n\n    // set up a simple orbit controller\n    if (options.orbitControls) {\n      this.orbitControls = createOrbitControls({\n        element: this.canvas,\n        parent: window,\n        distance: 4,\n        ...(options.orbitControls instanceof Object ? options.orbitControls : {}),\n      })\n    }\n\n    // Attach the Cannon physics engine\n    if (options.world) this.world = options.world\n\n    // Attach Tween.js\n    if (options.tween) this.tween = options.tween\n\n    // show the fps meter\n    if (options.showFps) {\n      this.stats = new Stats()\n      this.stats.showPanel(0)\n      document.body.appendChild(this.stats.dom)\n    }\n\n    // initialize the controls-state\n    if (options.controls) {\n      const controlsState = State(options.controls)\n      this.controls = options.hideControls ? controlsState : wrapGUI(controlsState)\n    }\n  }\n\n  resize = ({\n    width = window.innerWidth,\n    height = window.innerHeight,\n    pixelRatio = Math.min(this.maxPixelRatio, window.devicePixelRatio),\n  } = {}) => {\n    this.width = width\n    this.height = height\n    this.pixelRatio = pixelRatio\n\n    // update pixel ratio if necessary\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio)\n    }\n\n    // setup new size & update camera aspect if necessary\n    this.renderer.setSize(width, height)\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = width / height\n    }\n    this.camera.updateProjectionMatrix()\n\n    // resize also the composer\n    if (this.composer) {\n      this.composer.setSize(pixelRatio * width, pixelRatio * height)\n    }\n\n    // recursively tell all child objects to resize\n    this.scene.traverse(obj => {\n      if (typeof obj.resize === 'function') {\n        obj.resize({\n          width,\n          height,\n          pixelRatio,\n        })\n      }\n    })\n\n    // draw a frame to ensure the new size has been registered visually\n    this.draw()\n    return this\n  }\n\n  // convenience function to trigger a PNG download of the canvas\n  saveScreenshot = ({ width = 2560, height = 1440, fileName = 'image.png' } = {}) => {\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    const dataURI = this.canvas.toDataURL('image/png')\n\n    // reset to default size\n    this.resize()\n    this.draw()\n\n    // save\n    saveDataURI(fileName, dataURI)\n  }\n\n  update = (dt, time) => {\n    if (this.orbitControls) {\n      this.orbitControls.update()\n\n      // reposition to orbit controls\n      this.camera.up.fromArray(this.orbitControls.up)\n      this.camera.position.fromArray(this.orbitControls.position)\n      this.#tmpTarget.fromArray(this.orbitControls.target)\n      this.camera.lookAt(this.#tmpTarget)\n    }\n\n    // recursively tell all child objects to update\n    this.scene.traverse(obj => {\n      if (typeof obj.update === 'function') {\n        obj.update(dt, time)\n      }\n    })\n\n    if (this.world) {\n      // update the Cannon physics engine\n      this.world.step(dt)\n\n      // recursively tell all child bodies to update\n      this.world.bodies.forEach(body => {\n        if (typeof body.update === 'function') {\n          body.update(dt, time)\n        }\n      })\n    }\n\n    if (this.tween) {\n      // update the Tween.js engine\n      this.tween.update()\n    }\n\n    // call the update listeners\n    this.#updateListeners.forEach(fn => fn(dt, time))\n\n    return this\n  }\n\n  onUpdate(fn) {\n    this.#updateListeners.push(fn)\n  }\n\n  draw = () => {\n    if (this.composer) {\n      // make sure to always render the last pass\n      this.composer.passes.forEach((pass, i, passes) => {\n        const isLastElement = i === passes.length - 1\n\n        if (isLastElement) {\n          pass.renderToScreen = true\n        } else {\n          pass.renderToScreen = false\n        }\n      })\n\n      this.composer.render()\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n    return this\n  }\n\n  start = () => {\n    if (this.#rafID !== null) return\n    this.#rafID = window.requestAnimationFrame(this.animate)\n    this.isRunning = true\n    return this\n  }\n\n  stop = () => {\n    if (this.#rafID === null) return\n    window.cancelAnimationFrame(this.#rafID)\n    this.#rafID = null\n    this.isRunning = false\n    return this\n  }\n\n  animate = () => {\n    if (!this.isRunning) return\n    window.requestAnimationFrame(this.animate)\n\n    if (this.stats) this.stats.begin()\n\n    const now = performance.now()\n    const dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n    this.time += dt\n    this.#lastTime = now\n    this.update(dt, this.time)\n    this.draw()\n\n    if (this.stats) this.stats.end()\n  }\n\n  traverse = (fn, ...args) => {\n    this.scene.traverse(child => {\n      if (typeof child[fn] === 'function') {\n        child[fn].apply(child, args)\n      }\n    })\n  }\n}\n\nfunction saveDataURI(name, dataURI) {\n  const blob = dataURIToBlob(dataURI)\n\n  // force download\n  const link = document.createElement('a')\n  link.download = name\n  link.href = window.URL.createObjectURL(blob)\n  link.onclick = setTimeout(() => {\n    window.URL.revokeObjectURL(blob)\n    link.removeAttribute('href')\n  }, 0)\n\n  link.click()\n}\n","import * as THREE from 'three'\n\n\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nTHREE.GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.dracoLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== undefined ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== undefined ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( value ) {\n\n\t\t\tthis.resourcePath = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] = new GLTFTextureTransformExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification:\n\t * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension() {\n\n\t\tif ( ! THREE.DDSLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = new THREE.DDSLoader();\n\n\t}\n\n\t/**\n\t * Lights Extension\n\t *\n\t * Specification: PENDING\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new THREE.Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension (pending)\n\t *\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\n\t */\n\tfunction GLTFMaterialsUnlitExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = material.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification:\n\t */\n\tfunction GLTFTextureTransformExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn THREE.ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( params, material, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = material.extensions[ this.name ];\n\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tparams.vertexShader = shader.vertexShader;\n\t\t\t\tparams.fragmentShader = fragmentShader;\n\t\t\t\tparams.uniforms = uniforms;\n\t\t\t\tparams.defines = { 'STANDARD': '' };\n\n\t\t\t\tparams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tparams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tparams.color.fromArray( array );\n\t\t\t\t\tparams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tparams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tparams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tparams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tparams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {THREE.ShaderMaterial} source\n\t\t\t * @return {THREE.ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\ttarget[ params[ i ] ] = source[ params[ i ] ];\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.envMap ) {\n\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\t\tuniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_TYPE = {\n\t\t5126: Number,\n\t\t//35674: THREE.Matrix2,\n\t\t35675: THREE.Matrix3,\n\t\t35676: THREE.Matrix4,\n\t\t35664: THREE.Vector2,\n\t\t35665: THREE.Vector3,\n\t\t35666: THREE.Vector4,\n\t\t35678: THREE.Texture\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipMapNearestFilter,\n\t\t9985: THREE.LinearMipMapNearestFilter,\n\t\t9986: THREE.NearestMipMapLinearFilter,\n\t\t9987: THREE.LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_SIDES = {\n\t\t1028: THREE.BackSide, // Culling front\n\t\t1029: THREE.FrontSide // Culling back\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\n\t};\n\n\tvar WEBGL_DEPTH_FUNCS = {\n\t\t512: THREE.NeverDepth,\n\t\t513: THREE.LessDepth,\n\t\t514: THREE.EqualDepth,\n\t\t515: THREE.LessEqualDepth,\n\t\t516: THREE.GreaterEqualDepth,\n\t\t517: THREE.NotEqualDepth,\n\t\t518: THREE.GreaterEqualDepth,\n\t\t519: THREE.AlwaysDepth\n\t};\n\n\tvar WEBGL_BLEND_EQUATIONS = {\n\t\t32774: THREE.AddEquation,\n\t\t32778: THREE.SubtractEquation,\n\t\t32779: THREE.ReverseSubtractEquation\n\t};\n\n\tvar WEBGL_BLEND_FUNCS = {\n\t\t0: THREE.ZeroFactor,\n\t\t1: THREE.OneFactor,\n\t\t768: THREE.SrcColorFactor,\n\t\t769: THREE.OneMinusSrcColorFactor,\n\t\t770: THREE.SrcAlphaFactor,\n\t\t771: THREE.OneMinusSrcAlphaFactor,\n\t\t772: THREE.DstAlphaFactor,\n\t\t773: THREE.OneMinusDstAlphaFactor,\n\t\t774: THREE.DstColorFactor,\n\t\t775: THREE.OneMinusDstColorFactor,\n\t\t776: THREE.SrcAlphaSaturateFactor\n\t\t// The followings are not supported by Three.js yet\n\t\t//32769: CONSTANT_COLOR,\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\n\t\t//32771: CONSTANT_ALPHA,\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar STATES_ENABLES = {\n\t\t2884: 'CULL_FACE',\n\t\t2929: 'DEPTH_TEST',\n\t\t3042: 'BLEND',\n\t\t3089: 'SCISSOR_TEST',\n\t\t32823: 'POLYGON_OFFSET_FILL',\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': THREE.RGBAFormat,\n\t\t'image/jpeg': THREE.RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\tvar defaultMaterial;\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial() {\n\n\t\tdefaultMaterial = defaultMaterial || new THREE.MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: THREE.FrontSide\n\t\t} );\n\n\t\treturn defaultMaterial;\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tobject.userData = gltfDef.extras;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\t// Clone morph target accessors before modifying them.\n\n\t\t\tfor ( var i = 0, il = morphPositions.length; i < il; i ++ ) {\n\n\t\t\t\tif ( geometry.attributes.position === morphPositions[ i ] ) continue;\n\n\t\t\t\tmorphPositions[ i ] = cloneBufferAttribute( morphPositions[ i ] );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( geometry.attributes.normal === morphNormals[ i ] ) continue;\n\n\t\t\t\tmorphNormals[ i ] = cloneBufferAttribute( morphNormals[ i ] );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\t\t\t\tvar attributeName = 'morphTarget' + i;\n\n\t\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\t\t// Three.js morph position is absolute value. The formula is\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * ( morphPosition0 - basePosition )\n\t\t\t\t\t//     + weight1 * ( morphPosition1 - basePosition )\n\t\t\t\t\t//     ...\n\t\t\t\t\t// while the glTF one is relative\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * glTFmorphPosition0\n\t\t\t\t\t//     + weight1 * glTFmorphPosition1\n\t\t\t\t\t//     ...\n\t\t\t\t\t// then we need to convert from relative to absolute here.\n\n\t\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\t\tvar positionAttribute = morphPositions[ i ];\n\t\t\t\t\t\tpositionAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpositionAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\t\t// see target.POSITION's comment\n\n\t\t\t\t\tif ( target.NORMAL !== undefined ) {\n\n\t\t\t\t\t\tvar normalAttribute = morphNormals[ i ];\n\t\t\t\t\t\tnormalAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar normal = geometry.attributes.normal;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tnormalAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\tfunction isObjectEqual( a, b ) {\n\n\t\tif ( Object.keys( a ).length !== Object.keys( b ).length ) return false;\n\n\t\tfor ( var key in a ) {\n\n\t\t\tif ( a[ key ] !== b[ key ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\tfunction cloneBufferAttribute( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tvar count = attribute.count;\n\t\t\tvar itemSize = attribute.itemSize;\n\t\t\tvar array = attribute.array.slice( 0, count * itemSize );\n\n\t\t\tfor ( var i = 0, j = 0; i < count; ++ i ) {\n\n\t\t\t\tarray[ j ++ ] = attribute.getX( i );\n\t\t\t\tif ( itemSize >= 2 ) array[ j ++ ] = attribute.getY( i );\n\t\t\t\tif ( itemSize >= 3 ) array[ j ++ ] = attribute.getZ( i );\n\t\t\t\tif ( itemSize >= 4 ) array[ j ++ ] = attribute.getW( i );\n\n\t\t\t}\n\n\t\t\treturn new THREE.BufferAttribute( array, itemSize, attribute.normalized );\n\n\t\t}\n\n\t\treturn attribute.clone();\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tarray = new TypedArray( bufferView );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tswitch ( mapName ) {\n\n\t\t\t\tcase 'aoMap':\n\t\t\t\tcase 'emissiveMap':\n\t\t\t\tcase 'metalnessMap':\n\t\t\t\tcase 'normalMap':\n\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\ttexture.format = THREE.RGBFormat;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {THREE.Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\tlineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t: material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\n\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType( materialDef );\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType( materialDef );\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.addAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial()\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( originalMaterials ) {\n\n\t\t\treturn parser.loadGeometries( primitives ).then( function ( geometries ) {\n\n\t\t\t\tvar meshes = [];\n\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\t// 1. create Mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tvar material = originalMaterials[ i ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\tif ( mesh.isSkinnedMesh === true ) mesh.normalizeSkinWeights(); // #15319\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar group = new THREE.Group();\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a THREE.Group (glTF mesh with several primitives) or a THREE.Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputAccessor.array,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\treturn Promise.resolve( new THREE.Bone() );\n\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'camera', nodeDef.camera );\n\n\t\t\t} else if ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light );\n\n\t\t\t} else {\n\n\t\t\t\treturn Promise.resolve( new THREE.Object3D() );\n\n\t\t\t}\n\n\t\t}() ).then( function ( node ) {\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\n\n\t\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar mesh = meshes[ i ];\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new THREE.Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\n\nexport const GLTFLoader = THREE.GLTFLoader","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadTexture.js\nimport * as THREE from 'three'\nimport loadImage from 'image-promise'\n\nexport default async function loadTexture(url, options) {\n  const texture = new THREE.Texture()\n  texture.name = url\n  texture.encoding = options.encoding || THREE.LinearEncoding\n  setTextureParams(url, texture, options)\n\n  try {\n    const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n    texture.image = image\n    texture.needsUpdate = true\n    if (options.renderer) {\n      // Force texture to be uploaded to GPU immediately,\n      // this will avoid \"jank\" on first rendered frame\n      //\n      // BUG this was removed in r103\n      // https://github.com/mrdoob/three.js/pull/16069\n      // texture.setTexture2D(texture, 0)\n    }\n    return texture\n  } catch (err) {\n    throw new Error(`Could not load texture ${url}`)\n  }\n}\n\nfunction setTextureParams(url, texture, opt) {\n  if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n  if (typeof opt.mapping !== 'undefined') {\n    texture.mapping = opt.mapping\n  }\n  if (typeof opt.format !== 'undefined') {\n    texture.format = opt.format\n  } else {\n    // choose a nice default format\n    const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n    texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n  }\n  if (opt.repeat) texture.repeat.copy(opt.repeat)\n  texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n  texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n  texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n  texture.magFilter = opt.magFilter || THREE.LinearFilter\n  texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","import * as THREE from 'three'\n\n\n/**\n* @author Prashant Sharma / spidersharma03\n* @author Ben Houston / http://clara.io / bhouston\n*/\n\nTHREE.HDRCubeTextureLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t// override in sub classes\n\tthis.hdrLoader = new THREE.RGBELoader();\n\n};\n\nTHREE.HDRCubeTextureLoader.prototype.load = function ( type, urls, onLoad, onProgress, onError ) {\n\n\tvar RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\n\t};\n\n\tvar RGBEByteToRGBHalf = ( function () {\n\n\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\tvar floatView = new Float32Array( 1 );\n\t\tvar int32View = new Int32Array( floatView.buffer );\n\n\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t * used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t * by James Tursa?s half-precision code. */\n\t\tfunction toHalf( val ) {\n\n\t\t\tfloatView[ 0 ] = val;\n\t\t\tvar x = int32View[ 0 ];\n\n\t\t\tvar bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\t\tvar m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\t\tvar e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t * half, return signed zero. */\n\t\t\tif ( e < 103 ) return bits;\n\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\t\tif ( e > 142 ) {\n\n\t\t\t\tbits |= 0x7c00;\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t * not Inf, so make sure we set one mantissa bit too. */\n\t\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\t\treturn bits;\n\n\t\t\t}\n\n\t\t\t/* If exponent underflows but not too much, return a denormal */\n\t\t\tif ( e < 113 ) {\n\n\t\t\t\tm |= 0x0800;\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t * to 1, which is OK. */\n\t\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\t\treturn bits;\n\n\t\t\t}\n\n\t\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t * the exponent, which is OK. */\n\t\t\tbits += m & 1;\n\t\t\treturn bits;\n\n\t\t}\n\n\t\treturn function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = toHalf( sourceArray[ sourceOffset + 0 ] * scale );\n\t\t\tdestArray[ destOffset + 1 ] = toHalf( sourceArray[ sourceOffset + 1 ] * scale );\n\t\t\tdestArray[ destOffset + 2 ] = toHalf( sourceArray[ sourceOffset + 2 ] * scale );\n\n\t\t};\n\n\t} )();\n\n\t//\n\n\tvar texture = new THREE.CubeTexture();\n\n\ttexture.type = type;\n\ttexture.encoding = ( type === THREE.UnsignedByteType ) ? THREE.RGBEEncoding : THREE.LinearEncoding;\n\ttexture.format = ( type === THREE.UnsignedByteType ) ? THREE.RGBAFormat : THREE.RGBFormat;\n\ttexture.minFilter = ( texture.encoding === THREE.RGBEEncoding ) ? THREE.NearestFilter : THREE.LinearFilter;\n\ttexture.magFilter = ( texture.encoding === THREE.RGBEEncoding ) ? THREE.NearestFilter : THREE.LinearFilter;\n\ttexture.generateMipmaps = ( texture.encoding !== THREE.RGBEEncoding );\n\ttexture.anisotropy = 0;\n\n\tvar scope = this;\n\n\tvar loaded = 0;\n\n\tfunction loadHDRData( i, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( urls[ i ], function ( buffer ) {\n\n\t\t\tloaded ++;\n\n\t\t\tvar texData = scope.hdrLoader._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( type === THREE.FloatType ) {\n\n\t\t\t\tvar numElements = ( texData.data.length / 4 ) * 3;\n\t\t\t\tvar floatdata = new Float32Array( numElements );\n\n\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBFloat( texData.data, j * 4, floatdata, j * 3 );\n\n\t\t\t\t}\n\n\t\t\t\ttexData.data = floatdata;\n\n\t\t\t} else if ( type === THREE.HalfFloatType ) {\n\n\t\t\t\tvar numElements = ( texData.data.length / 4 ) * 3;\n\t\t\t\tvar halfdata = new Uint16Array( numElements );\n\n\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBHalf( texData.data, j * 4, halfdata, j * 3 );\n\n\t\t\t\t}\n\n\t\t\t\ttexData.data = halfdata;\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture[ i ].images = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\tvar dataTexture = new THREE.DataTexture( texData.data, texData.width, texData.height );\n\t\t\t\tdataTexture.format = texture.format;\n\t\t\t\tdataTexture.type = texture.type;\n\t\t\t\tdataTexture.encoding = texture.encoding;\n\t\t\t\tdataTexture.minFilter = texture.minFilter;\n\t\t\t\tdataTexture.magFilter = texture.magFilter;\n\t\t\t\tdataTexture.generateMipmaps = texture.generateMipmaps;\n\n\t\t\t\ttexture.images[ i ] = dataTexture;\n\n\t\t\t}\n\n\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tfor ( var i = 0; i < urls.length; i ++ ) {\n\n\t\tloadHDRData( i, onLoad, onProgress, onError );\n\n\t}\n\n\treturn texture;\n\n};\n\nTHREE.HDRCubeTextureLoader.prototype.setPath = function ( value ) {\n\n\tthis.path = value;\n\treturn this;\n\n};\n\n\nexport const HDRCubeTextureLoader = THREE.HDRCubeTextureLoader","import * as THREE from 'three'\n\n\n/**\n * @author Prashant Sharma / spidersharma03\n * @author Ben Houston / bhouston, https://clara.io\n *\n * To avoid cube map seams, I create an extra pixel around each face. This way when the cube map is\n * sampled by an application later(with a little care by sampling the centre of the texel), the extra 1 border\n *\tof pixels makes sure that there is no seams artifacts present. This works perfectly for cubeUV format as\n *\twell where the 6 faces can be arranged in any manner whatsoever.\n * Code in the beginning of fragment shader's main function does this job for a given resolution.\n *\tRun Scene_PMREM_Test.html in the examples directory to see the sampling from the cube lods generated\n *\tby this class.\n */\n\nTHREE.PMREMGenerator = ( function () {\n\n\tvar shader = getShader();\n\tvar camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0.0, 1000 );\n\tvar scene = new THREE.Scene();\n\tvar planeMesh = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2, 0 ), shader );\n\tplaneMesh.material.side = THREE.DoubleSide;\n\tscene.add( planeMesh );\n\tscene.add( camera );\n\n\tvar PMREMGenerator = function ( sourceTexture, samplesPerLevel, resolution ) {\n\n\t\tthis.sourceTexture = sourceTexture;\n\t\tthis.resolution = ( resolution !== undefined ) ? resolution : 256; // NODE: 256 is currently hard coded in the glsl code for performance reasons\n\t\tthis.samplesPerLevel = ( samplesPerLevel !== undefined ) ? samplesPerLevel : 32;\n\n\t\tvar monotonicEncoding = ( this.sourceTexture.encoding === THREE.LinearEncoding ) ||\n\t\t\t( this.sourceTexture.encoding === THREE.GammaEncoding ) || ( this.sourceTexture.encoding === THREE.sRGBEncoding );\n\n\t\tthis.sourceTexture.minFilter = ( monotonicEncoding ) ? THREE.LinearFilter : THREE.NearestFilter;\n\t\tthis.sourceTexture.magFilter = ( monotonicEncoding ) ? THREE.LinearFilter : THREE.NearestFilter;\n\t\tthis.sourceTexture.generateMipmaps = this.sourceTexture.generateMipmaps && monotonicEncoding;\n\n\t\tthis.cubeLods = [];\n\n\t\tvar size = this.resolution;\n\t\tvar params = {\n\t\t\tformat: this.sourceTexture.format,\n\t\t\tmagFilter: this.sourceTexture.magFilter,\n\t\t\tminFilter: this.sourceTexture.minFilter,\n\t\t\ttype: this.sourceTexture.type,\n\t\t\tgenerateMipmaps: this.sourceTexture.generateMipmaps,\n\t\t\tanisotropy: this.sourceTexture.anisotropy,\n\t\t\tencoding: this.sourceTexture.encoding\n\t\t};\n\n\t\t// how many LODs fit in the given CubeUV Texture.\n\t\tthis.numLods = Math.log( size ) / Math.log( 2 ) - 2; // IE11 doesn't support Math.log2\n\n\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\tvar renderTarget = new THREE.WebGLRenderTargetCube( size, size, params );\n\t\t\trenderTarget.texture.name = \"PMREMGenerator.cube\" + i;\n\t\t\tthis.cubeLods.push( renderTarget );\n\t\t\tsize = Math.max( 16, size / 2 );\n\n\t\t}\n\n\t};\n\n\tPMREMGenerator.prototype = {\n\n\t\tconstructor: PMREMGenerator,\n\n\t\t/*\n\t\t * Prashant Sharma / spidersharma03: More thought and work is needed here.\n\t\t * Right now it's a kind of a hack to use the previously convolved map to convolve the current one.\n\t\t * I tried to use the original map to convolve all the lods, but for many textures(specially the high frequency)\n\t\t * even a high number of samples(1024) dosen't lead to satisfactory results.\n\t\t * By using the previous convolved maps, a lower number of samples are generally sufficient(right now 32, which\n\t\t * gives okay results unless we see the reflection very carefully, or zoom in too much), however the math\n\t\t * goes wrong as the distribution function tries to sample a larger area than what it should be. So I simply scaled\n\t\t * the roughness by 0.9(totally empirical) to try to visually match the original result.\n\t\t * The condition \"if(i <5)\" is also an attemt to make the result match the original result.\n\t\t * This method requires the most amount of thinking I guess. Here is a paper which we could try to implement in future::\n\t\t * https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch20.html\n\t\t */\n\t\tupdate: function ( renderer ) {\n\n\t\t\t// Texture should only be flipped for CubeTexture, not for\n\t\t\t// a Texture created via THREE.WebGLRenderTargetCube.\n\t\t\tvar tFlip = ( this.sourceTexture.isCubeTexture ) ? - 1 : 1;\n\n\t\t\tshader.defines[ 'SAMPLES_PER_LEVEL' ] = this.samplesPerLevel;\n\t\t\tshader.uniforms[ 'faceIndex' ].value = 0;\n\t\t\tshader.uniforms[ 'envMap' ].value = this.sourceTexture;\n\t\t\tshader.envMap = this.sourceTexture;\n\t\t\tshader.needsUpdate = true;\n\n\t\t\tvar gammaInput = renderer.gammaInput;\n\t\t\tvar gammaOutput = renderer.gammaOutput;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar toneMappingExposure = renderer.toneMappingExposure;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.toneMapping = THREE.LinearToneMapping;\n\t\t\trenderer.toneMappingExposure = 1.0;\n\t\t\trenderer.gammaInput = false;\n\t\t\trenderer.gammaOutput = false;\n\n\t\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\t\tvar r = i / ( this.numLods - 1 );\n\t\t\t\tshader.uniforms[ 'roughness' ].value = r * 0.9; // see comment above, pragmatic choice\n\t\t\t\t// Only apply the tFlip for the first LOD\n\t\t\t\tshader.uniforms[ 'tFlip' ].value = ( i == 0 ) ? tFlip : 1;\n\t\t\t\tvar size = this.cubeLods[ i ].width;\n\t\t\t\tshader.uniforms[ 'mapSize' ].value = size;\n\t\t\t\tthis.renderToCubeMapTarget( renderer, this.cubeLods[ i ] );\n\n\t\t\t\tif ( i < 5 ) shader.uniforms[ 'envMap' ].value = this.cubeLods[ i ].texture;\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.toneMappingExposure = toneMappingExposure;\n\t\t\trenderer.gammaInput = gammaInput;\n\t\t\trenderer.gammaOutput = gammaOutput;\n\n\t\t},\n\n\t\trenderToCubeMapTarget: function ( renderer, renderTarget ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tthis.renderToCubeMapTargetFace( renderer, renderTarget, i );\n\n\t\t\t}\n\n\t\t},\n\n\t\trenderToCubeMapTargetFace: function ( renderer, renderTarget, faceIndex ) {\n\n\t\t\tshader.uniforms[ 'faceIndex' ].value = faceIndex;\n\t\t\trenderer.setRenderTarget( renderTarget, faceIndex );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, camera );\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tfor ( var i = 0, l = this.cubeLods.length; i < l; i ++ ) {\n\n\t\t\t\tthis.cubeLods[ i ].dispose();\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\tfunction getShader() {\n\n\t\tvar shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"SAMPLES_PER_LEVEL\": 20,\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"faceIndex\": { value: 0 },\n\t\t\t\t\"roughness\": { value: 0.5 },\n\t\t\t\t\"mapSize\": { value: 0.5 },\n\t\t\t\t\"envMap\": { value: null },\n\t\t\t\t\"tFlip\": { value: - 1 },\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\n\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform int faceIndex;\\n\\\n\t\t\t\tuniform float roughness;\\n\\\n\t\t\t\tuniform samplerCube envMap;\\n\\\n\t\t\t\tuniform float mapSize;\\n\\\n\t\t\t\tuniform float tFlip;\\n\\\n\t\t\t\t\\n\\\n\t\t\t\tfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\\n\t\t\t\t\tfloat a = ggxRoughness + 0.0001;\\n\\\n\t\t\t\t\ta *= a;\\n\\\n\t\t\t\t\treturn ( 2.0 / a - 2.0 );\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tvec3 ImportanceSamplePhong(vec2 uv, mat3 vecSpace, float specPow) {\\n\\\n\t\t\t\t\tfloat phi = uv.y * 2.0 * PI;\\n\\\n\t\t\t\t\tfloat cosTheta = pow(1.0 - uv.x, 1.0 / (specPow + 1.0));\\n\\\n\t\t\t\t\tfloat sinTheta = sqrt(1.0 - cosTheta * cosTheta);\\n\\\n\t\t\t\t\tvec3 sampleDir = vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\\n\\\n\t\t\t\t\treturn vecSpace * sampleDir;\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tvec3 ImportanceSampleGGX( vec2 uv, mat3 vecSpace, float Roughness )\\n\\\n\t\t\t\t{\\n\\\n\t\t\t\t\tfloat a = Roughness * Roughness;\\n\\\n\t\t\t\t\tfloat Phi = 2.0 * PI * uv.x;\\n\\\n\t\t\t\t\tfloat CosTheta = sqrt( (1.0 - uv.y) / ( 1.0 + (a*a - 1.0) * uv.y ) );\\n\\\n\t\t\t\t\tfloat SinTheta = sqrt( 1.0 - CosTheta * CosTheta );\\n\\\n\t\t\t\t\treturn vecSpace * vec3(SinTheta * cos( Phi ), SinTheta * sin( Phi ), CosTheta);\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tmat3 matrixFromVector(vec3 n) {\\n\\\n\t\t\t\t\tfloat a = 1.0 / (1.0 + n.z);\\n\\\n\t\t\t\t\tfloat b = -n.x * n.y * a;\\n\\\n\t\t\t\t\tvec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\\n\\\n\t\t\t\t\tvec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\\n\\\n\t\t\t\t\treturn mat3(b1, b2, n);\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\t\\n\\\n\t\t\t\tvec4 testColorMap(float Roughness) {\\n\\\n\t\t\t\t\tvec4 color;\\n\\\n\t\t\t\t\tif(faceIndex == 0)\\n\\\n\t\t\t\t\t\tcolor = vec4(1.0,0.0,0.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 1)\\n\\\n\t\t\t\t\t\tcolor = vec4(0.0,1.0,0.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 2)\\n\\\n\t\t\t\t\t\tcolor = vec4(0.0,0.0,1.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 3)\\n\\\n\t\t\t\t\t\tcolor = vec4(1.0,1.0,0.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 4)\\n\\\n\t\t\t\t\t\tcolor = vec4(0.0,1.0,1.0,1.0);\\n\\\n\t\t\t\t\telse\\n\\\n\t\t\t\t\t\tcolor = vec4(1.0,0.0,1.0,1.0);\\n\\\n\t\t\t\t\tcolor *= ( 1.0 - Roughness );\\n\\\n\t\t\t\t\treturn color;\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec3 sampleDirection;\\n\\\n\t\t\t\t\tvec2 uv = vUv*2.0 - 1.0;\\n\\\n\t\t\t\t\tfloat offset = -1.0/mapSize;\\n\\\n\t\t\t\t\tconst float a = -1.0;\\n\\\n\t\t\t\t\tconst float b = 1.0;\\n\\\n\t\t\t\t\tfloat c = -1.0 + offset;\\n\\\n\t\t\t\t\tfloat d = 1.0 - offset;\\n\\\n\t\t\t\t\tfloat bminusa = b - a;\\n\\\n\t\t\t\t\tuv.x = (uv.x - a)/bminusa * d - (uv.x - b)/bminusa * c;\\n\\\n\t\t\t\t\tuv.y = (uv.y - a)/bminusa * d - (uv.y - b)/bminusa * c;\\n\\\n\t\t\t\t\tif (faceIndex==0) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(1.0, -uv.y, -uv.x);\\n\\\n\t\t\t\t\t} else if (faceIndex==1) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(-1.0, -uv.y, uv.x);\\n\\\n\t\t\t\t\t} else if (faceIndex==2) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, 1.0, uv.y);\\n\\\n\t\t\t\t\t} else if (faceIndex==3) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, -1.0, -uv.y);\\n\\\n\t\t\t\t\t} else if (faceIndex==4) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, -uv.y, 1.0);\\n\\\n\t\t\t\t\t} else {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(-uv.x, -uv.y, -1.0);\\n\\\n\t\t\t\t\t}\\n\\\n\t\t\t\t\tvec3 correctedDirection = vec3( tFlip * sampleDirection.x, sampleDirection.yz );\\n\\\n\t\t\t\t\tmat3 vecSpace = matrixFromVector( normalize( correctedDirection ) );\\n\\\n\t\t\t\t\tvec3 rgbColor = vec3(0.0);\\n\\\n\t\t\t\t\tconst int NumSamples = SAMPLES_PER_LEVEL;\\n\\\n\t\t\t\t\tvec3 vect;\\n\\\n\t\t\t\t\tfloat weight = 0.0;\\n\\\n\t\t\t\t\tfor( int i = 0; i < NumSamples; i ++ ) {\\n\\\n\t\t\t\t\t\tfloat sini = sin(float(i));\\n\\\n\t\t\t\t\t\tfloat cosi = cos(float(i));\\n\\\n\t\t\t\t\t\tfloat r = rand(vec2(sini, cosi));\\n\\\n\t\t\t\t\t\tvect = ImportanceSampleGGX(vec2(float(i) / float(NumSamples), r), vecSpace, roughness);\\n\\\n\t\t\t\t\t\tfloat dotProd = dot(vect, normalize(sampleDirection));\\n\\\n\t\t\t\t\t\tweight += dotProd;\\n\\\n\t\t\t\t\t\tvec3 color = envMapTexelToLinear(textureCube(envMap, vect)).rgb;\\n\\\n\t\t\t\t\t\trgbColor.rgb += color;\\n\\\n\t\t\t\t\t}\\n\\\n\t\t\t\t\trgbColor /= float(NumSamples);\\n\\\n\t\t\t\t\t//rgbColor = testColorMap( roughness ).rgb;\\n\\\n\t\t\t\t\tgl_FragColor = linearToOutputTexel( vec4( rgbColor, 1.0 ) );\\n\\\n\t\t\t\t}\",\n\n\t\t\tblending: THREE.NoBlending\n\n\t\t} );\n\n\t\tshaderMaterial.type = 'PMREMGenerator';\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\treturn PMREMGenerator;\n\n} )();\n\n\nexport const PMREMGenerator = THREE.PMREMGenerator","import * as THREE from 'three'\n\n\n/**\n * @author Prashant Sharma / spidersharma03\n * @author Ben Houston / bhouston, https://clara.io\n *\n * This class takes the cube lods(corresponding to different roughness values), and creates a single cubeUV\n * Texture. The format for a given roughness set of faces is simply::\n * +X+Y+Z\n * -X-Y-Z\n * For every roughness a mip map chain is also saved, which is essential to remove the texture artifacts due to\n * minification.\n * Right now for every face a PlaneMesh is drawn, which leads to a lot of geometry draw calls, but can be replaced\n * later by drawing a single buffer and by sending the appropriate faceIndex via vertex attributes.\n * The arrangement of the faces is fixed, as assuming this arrangement, the sampling function has been written.\n */\n\nTHREE.PMREMCubeUVPacker = ( function () {\n\n\tvar camera = new THREE.OrthographicCamera();\n\tvar scene = new THREE.Scene();\n\tvar shader = getShader();\n\n\tvar PMREMCubeUVPacker = function ( cubeTextureLods ) {\n\n\t\tthis.cubeLods = cubeTextureLods;\n\t\tvar size = cubeTextureLods[ 0 ].width * 4;\n\n\t\tvar sourceTexture = cubeTextureLods[ 0 ].texture;\n\t\tvar params = {\n\t\t\tformat: sourceTexture.format,\n\t\t\tmagFilter: sourceTexture.magFilter,\n\t\t\tminFilter: sourceTexture.minFilter,\n\t\t\ttype: sourceTexture.type,\n\t\t\tgenerateMipmaps: sourceTexture.generateMipmaps,\n\t\t\tanisotropy: sourceTexture.anisotropy,\n\t\t\tencoding: ( sourceTexture.encoding === THREE.RGBEEncoding ) ? THREE.RGBM16Encoding : sourceTexture.encoding\n\t\t};\n\n\t\tif ( params.encoding === THREE.RGBM16Encoding ) {\n\n\t\t\tparams.magFilter = THREE.LinearFilter;\n\t\t\tparams.minFilter = THREE.LinearFilter;\n\n\t\t}\n\n\t\tthis.CubeUVRenderTarget = new THREE.WebGLRenderTarget( size, size, params );\n\t\tthis.CubeUVRenderTarget.texture.name = \"PMREMCubeUVPacker.cubeUv\";\n\t\tthis.CubeUVRenderTarget.texture.mapping = THREE.CubeUVReflectionMapping;\n\n\t\tthis.objects = [];\n\n\t\tvar geometry = new THREE.PlaneBufferGeometry( 1, 1 );\n\n\t\tvar faceOffsets = [];\n\t\tfaceOffsets.push( new THREE.Vector2( 0, 0 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 1, 0 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 2, 0 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 0, 1 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 1, 1 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 2, 1 ) );\n\n\t\tvar textureResolution = size;\n\t\tsize = cubeTextureLods[ 0 ].width;\n\n\t\tvar offset2 = 0;\n\t\tvar c = 4.0;\n\t\tthis.numLods = Math.log( cubeTextureLods[ 0 ].width ) / Math.log( 2 ) - 2; // IE11 doesn't support Math.log2\n\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\tvar offset1 = ( textureResolution - textureResolution / c ) * 0.5;\n\t\t\tif ( size > 16 ) c *= 2;\n\t\t\tvar nMips = size > 16 ? 6 : 1;\n\t\t\tvar mipOffsetX = 0;\n\t\t\tvar mipOffsetY = 0;\n\t\t\tvar mipSize = size;\n\n\t\t\tfor ( var j = 0; j < nMips; j ++ ) {\n\n\t\t\t\t// Mip Maps\n\t\t\t\tfor ( var k = 0; k < 6; k ++ ) {\n\n\t\t\t\t\t// 6 Cube Faces\n\t\t\t\t\tvar material = shader.clone();\n\t\t\t\t\tmaterial.uniforms[ 'envMap' ].value = this.cubeLods[ i ].texture;\n\t\t\t\t\tmaterial.envMap = this.cubeLods[ i ].texture;\n\t\t\t\t\tmaterial.uniforms[ 'faceIndex' ].value = k;\n\t\t\t\t\tmaterial.uniforms[ 'mapSize' ].value = mipSize;\n\n\t\t\t\t\tvar planeMesh = new THREE.Mesh( geometry, material );\n\t\t\t\t\tplaneMesh.position.x = faceOffsets[ k ].x * mipSize - offset1 + mipOffsetX;\n\t\t\t\t\tplaneMesh.position.y = faceOffsets[ k ].y * mipSize - offset1 + offset2 + mipOffsetY;\n\t\t\t\t\tplaneMesh.material.side = THREE.BackSide;\n\t\t\t\t\tplaneMesh.scale.setScalar( mipSize );\n\t\t\t\t\tthis.objects.push( planeMesh );\n\n\t\t\t\t}\n\t\t\t\tmipOffsetY += 1.75 * mipSize;\n\t\t\t\tmipOffsetX += 1.25 * mipSize;\n\t\t\t\tmipSize /= 2;\n\n\t\t\t}\n\t\t\toffset2 += 2 * size;\n\t\t\tif ( size > 16 ) size /= 2;\n\n\t\t}\n\n\t};\n\n\tPMREMCubeUVPacker.prototype = {\n\n\t\tconstructor: PMREMCubeUVPacker,\n\n\t\tupdate: function ( renderer ) {\n\n\t\t\tvar size = this.cubeLods[ 0 ].width * 4;\n\t\t\t// top and bottom are swapped for some reason?\n\t\t\tcamera.left = - size * 0.5;\n\t\t\tcamera.right = size * 0.5;\n\t\t\tcamera.top = - size * 0.5;\n\t\t\tcamera.bottom = size * 0.5;\n\t\t\tcamera.near = 0;\n\t\t\tcamera.far = 1;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\tfor ( var i = 0; i < this.objects.length; i ++ ) {\n\n\t\t\t\tscene.add( this.objects[ i ] );\n\n\t\t\t}\n\n\t\t\tvar gammaInput = renderer.gammaInput;\n\t\t\tvar gammaOutput = renderer.gammaOutput;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar toneMappingExposure = renderer.toneMappingExposure;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.gammaInput = false;\n\t\t\trenderer.gammaOutput = false;\n\t\t\trenderer.toneMapping = THREE.LinearToneMapping;\n\t\t\trenderer.toneMappingExposure = 1.0;\n\t\t\trenderer.setRenderTarget( this.CubeUVRenderTarget );\n\t\t\trenderer.render( scene, camera );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.toneMappingExposure = toneMappingExposure;\n\t\t\trenderer.gammaInput = gammaInput;\n\t\t\trenderer.gammaOutput = gammaOutput;\n\n\t\t\tfor ( var i = 0; i < this.objects.length; i ++ ) {\n\n\t\t\t\tscene.remove( this.objects[ i ] );\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tfor ( var i = 0, l = this.objects.length; i < l; i ++ ) {\n\n\t\t\t\tthis.objects[ i ].material.dispose();\n\n\t\t\t}\n\n\t\t\tthis.objects[ 0 ].geometry.dispose();\n\n\t\t}\n\n\t};\n\n\tfunction getShader() {\n\n\t\tvar shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: {\n\t\t\t\t\"faceIndex\": { value: 0 },\n\t\t\t\t\"mapSize\": { value: 0 },\n\t\t\t\t\"envMap\": { value: null },\n\t\t\t\t\"testColor\": { value: new THREE.Vector3( 1, 1, 1 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n        \"precision highp float;\\\n        varying vec2 vUv;\\\n        void main() {\\\n          vUv = uv;\\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\n        }\",\n\n\t\t\tfragmentShader:\n        \"precision highp float;\\\n        varying vec2 vUv;\\\n        uniform samplerCube envMap;\\\n        uniform float mapSize;\\\n        uniform vec3 testColor;\\\n        uniform int faceIndex;\\\n        \\\n        void main() {\\\n          vec3 sampleDirection;\\\n          vec2 uv = vUv;\\\n          uv = uv * 2.0 - 1.0;\\\n          uv.y *= -1.0;\\\n          if(faceIndex == 0) {\\\n            sampleDirection = normalize(vec3(1.0, uv.y, -uv.x));\\\n          } else if(faceIndex == 1) {\\\n            sampleDirection = normalize(vec3(uv.x, 1.0, uv.y));\\\n          } else if(faceIndex == 2) {\\\n            sampleDirection = normalize(vec3(uv.x, uv.y, 1.0));\\\n          } else if(faceIndex == 3) {\\\n            sampleDirection = normalize(vec3(-1.0, uv.y, uv.x));\\\n          } else if(faceIndex == 4) {\\\n            sampleDirection = normalize(vec3(uv.x, -1.0, -uv.y));\\\n          } else {\\\n            sampleDirection = normalize(vec3(-uv.x, uv.y, -1.0));\\\n          }\\\n          vec4 color = envMapTexelToLinear( textureCube( envMap, sampleDirection ) );\\\n          gl_FragColor = linearToOutputTexel( color );\\\n        }\",\n\n\t\t\tblending: THREE.NoBlending\n\n\t\t} );\n\n\t\tshaderMaterial.type = 'PMREMCubeUVPacker';\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\n\treturn PMREMCubeUVPacker;\n\n} )();\n\n\nexport const PMREMCubeUVPacker = THREE.PMREMCubeUVPacker","import * as THREE from 'three'\n\n\n/**\n* @author Richard M. / https://github.com/richardmonette\n* @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.CubemapGenerator = function ( renderer ) {\n\n\tthis.renderer = renderer;\n\n};\n\nTHREE.CubemapGenerator.prototype.fromEquirectangular = function ( texture, options ) {\n\n\toptions = options || {};\n\n\tvar scene = new THREE.Scene();\n\n\tvar shader = {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader:\n\n\t\t\t`\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t//include <common>\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t\t`,\n\n\t\tfragmentShader:\n\n\t\t\t`\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t//include <common>\n\t\t\t#define RECIPROCAL_PI 0.31830988618\n\t\t\t#define RECIPROCAL_PI2 0.15915494\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV;\n\n\t\t\t\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\t\t\t\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t\t`\n\t};\n\n\tvar material = new THREE.ShaderMaterial( {\n\n\t\ttype: 'CubemapFromEquirect',\n\n\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\tside: THREE.BackSide,\n\t\tblending: THREE.NoBlending\n\n\t} );\n\n\tmaterial.uniforms.tEquirect.value = texture;\n\n\tvar mesh = new THREE.Mesh( new THREE.BoxBufferGeometry( 5, 5, 5 ), material );\n\n\tscene.add( mesh );\n\n\tvar resolution = options.resolution || 512;\n\n\tvar params = {\n\t\ttype: texture.type,\n\t\tformat: texture.format,\n\t\tencoding: texture.encoding,\n\t\tgenerateMipmaps: ( options.generateMipmaps !== undefined ) ? options.generateMipmaps : texture.generateMipmaps,\n\t\tminFilter: ( options.minFilter !== undefined ) ? options.minFilter : texture.minFilter,\n\t\tmagFilter: ( options.magFilter !== undefined ) ? options.magFilter : texture.magFilter\n\t};\n\n\tvar camera = new THREE.CubeCamera( 1, 10, resolution, params );\n\n\tcamera.update( this.renderer, scene );\n\n\tmesh.geometry.dispose();\n\tmesh.material.dispose();\n\n\treturn camera.renderTarget;\n\n};\n\n//\n\nTHREE.EquirectangularToCubeGenerator = ( function () {\n\n\tvar camera = new THREE.PerspectiveCamera( 90, 1, 0.1, 10 );\n\tvar scene = new THREE.Scene();\n\tvar boxMesh = new THREE.Mesh( new THREE.BoxBufferGeometry( 1, 1, 1 ), getShader() );\n\tboxMesh.material.side = THREE.BackSide;\n\tscene.add( boxMesh );\n\n\tvar EquirectangularToCubeGenerator = function ( sourceTexture, options ) {\n\n\t\toptions = options || {};\n\n\t\tthis.sourceTexture = sourceTexture;\n\t\tthis.resolution = options.resolution || 512;\n\n\t\tthis.views = [\n\t\t\t{ t: [ 1, 0, 0 ], u: [ 0, - 1, 0 ] },\n\t\t\t{ t: [ - 1, 0, 0 ], u: [ 0, - 1, 0 ] },\n\t\t\t{ t: [ 0, 1, 0 ], u: [ 0, 0, 1 ] },\n\t\t\t{ t: [ 0, - 1, 0 ], u: [ 0, 0, - 1 ] },\n\t\t\t{ t: [ 0, 0, 1 ], u: [ 0, - 1, 0 ] },\n\t\t\t{ t: [ 0, 0, - 1 ], u: [ 0, - 1, 0 ] },\n\t\t];\n\n\t\tvar params = {\n\t\t\tformat: options.format || this.sourceTexture.format,\n\t\t\tmagFilter: this.sourceTexture.magFilter,\n\t\t\tminFilter: this.sourceTexture.minFilter,\n\t\t\ttype: options.type || this.sourceTexture.type,\n\t\t\tgenerateMipmaps: this.sourceTexture.generateMipmaps,\n\t\t\tanisotropy: this.sourceTexture.anisotropy,\n\t\t\tencoding: this.sourceTexture.encoding\n\t\t};\n\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( this.resolution, this.resolution, params );\n\n\t};\n\n\tEquirectangularToCubeGenerator.prototype = {\n\n\t\tconstructor: EquirectangularToCubeGenerator,\n\n\t\tupdate: function ( renderer ) {\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tboxMesh.material.uniforms.equirectangularMap.value = this.sourceTexture;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar v = this.views[ i ];\n\n\t\t\t\tcamera.position.set( 0, 0, 0 );\n\t\t\t\tcamera.up.set( v.u[ 0 ], v.u[ 1 ], v.u[ 2 ] );\n\t\t\t\tcamera.lookAt( v.t[ 0 ], v.t[ 1 ], v.t[ 2 ] );\n\n\t\t\t\trenderer.setRenderTarget( this.renderTarget, i );\n\t\t\t\trenderer.clear();\n\t\t\t\trenderer.render( scene, camera );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\treturn this.renderTarget.texture;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.renderTarget.dispose();\n\n\t\t}\n\n\t};\n\n\tfunction getShader() {\n\n\t\tvar shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: {\n\t\t\t\t\"equirectangularMap\": { value: null },\n\t\t\t},\n\n\t\t\tvertexShader:\n        \"varying vec3 localPosition;\\n\\\n        \\n\\\n        void main() {\\n\\\n          localPosition = position;\\n\\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n        }\",\n\n\t\t\tfragmentShader:\n        \"#include <common>\\n\\\n        varying vec3 localPosition;\\n\\\n        uniform sampler2D equirectangularMap;\\n\\\n        \\n\\\n        vec2 EquirectangularSampleUV(vec3 v) {\\n\\\n          vec2 uv = vec2(atan(v.z, v.x), asin(v.y));\\n\\\n          uv *= vec2(0.1591, 0.3183); // inverse atan\\n\\\n          uv += 0.5;\\n\\\n          return uv;\\n\\\n        }\\n\\\n        \\n\\\n        void main() {\\n\\\n          vec2 uv = EquirectangularSampleUV(normalize(localPosition));\\n\\\n          gl_FragColor = texture2D(equirectangularMap, uv);\\n\\\n        }\",\n\n\t\t\tblending: THREE.NoBlending\n\n\t\t} );\n\n\t\tshaderMaterial.type = 'EquirectangularToCubeGenerator';\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\treturn EquirectangularToCubeGenerator;\n\n} )();\n\n\nexport const EquirectangularToCubeGenerator = THREE.EquirectangularToCubeGenerator","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadEnvMap.js\nimport * as THREE from 'three'\nimport clamp from 'lodash/clamp'\n// TODO import those from three.js when this issue will be solved\n// https://github.com/mrdoob/three.js/issues/9562\nimport { HDRCubeTextureLoader } from './three/HDRCubeTextureLoader'\nimport { PMREMGenerator } from './three/PMREMGenerator'\nimport { PMREMCubeUVPacker } from './three/PMREMCubeUVPacker'\nimport { EquirectangularToCubeGenerator } from './three/EquirectangularToCubeGenerator'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n  const renderer = options.renderer\n\n  if (!renderer) {\n    throw new Error(`PBR Map requires renderer to passed in the options for ${url}!`)\n  }\n\n  if (options.equirectangular) {\n    const texture = await loadTexture(url, { renderer })\n\n    const cubemapGenerator = new EquirectangularToCubeGenerator(texture, { resolution: 1024 })\n\n    const cubeMapTexture = cubemapGenerator.update(renderer)\n\n    // renderTarget is used for the scene.background\n    cubeMapTexture.renderTarget = cubemapGenerator.renderTarget\n\n    texture.dispose() // dispose original texture\n    texture.image.data = null // remove Image reference\n\n    return buildCubeMap(cubeMapTexture, options)\n  }\n\n  const basePath = url\n\n  const isHDR = options.hdr\n  const extension = isHDR ? '.hdr' : '.png'\n  const urls = genCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n  if (isHDR) {\n    // load a float HDR texture\n    return new Promise((resolve, reject) => {\n      new HDRCubeTextureLoader().load(\n        THREE.UnsignedByteType,\n        urls,\n        map => resolve(buildCubeMap(map, options)),\n        null,\n        () => reject(new Error(`Could not load PBR map: ${basePath}`)),\n      )\n    })\n  }\n\n  // load a RGBM encoded texture\n  return new Promise((resolve, reject) => {\n    new THREE.CubeTextureLoader().load(\n      urls,\n      cubeMap => {\n        cubeMap.encoding = THREE.RGBM16Encoding\n        resolve(buildCubeMap(cubeMap, options))\n      },\n      null,\n      () => reject(new Error(`Could not load PBR map: ${basePath}`)),\n    )\n  })\n}\n\nfunction buildCubeMap(cubeMap, options) {\n  if (options.pbr || typeof options.level === 'number') {\n    // prefilter the environment map for irradiance\n    const pmremGenerator = new PMREMGenerator(cubeMap)\n    pmremGenerator.update(options.renderer)\n    if (options.pbr) {\n      const pmremCubeUVPacker = new PMREMCubeUVPacker(pmremGenerator.cubeLods)\n      pmremCubeUVPacker.update(options.renderer)\n      const target = pmremCubeUVPacker.CubeUVRenderTarget\n      cubeMap = target.texture\n      pmremCubeUVPacker.dispose()\n    } else {\n      const idx = clamp(Math.floor(options.level), 0, pmremGenerator.cubeLods.length)\n      cubeMap = pmremGenerator.cubeLods[idx].texture\n    }\n    pmremGenerator.dispose()\n  }\n  if (options.mapping) cubeMap.mapping = options.mapping\n  return cubeMap\n}\n\nfunction genCubeUrls(prefix, postfix) {\n  return [\n    `${prefix}px${postfix}`,\n    `${prefix}nx${postfix}`,\n    `${prefix}py${postfix}`,\n    `${prefix}ny${postfix}`,\n    `${prefix}pz${postfix}`,\n    `${prefix}nz${postfix}`,\n  ]\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/AssetManager.js\nimport pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\n// TODO import the GLTFLoader from three.js when this issue will be solved\n// https://github.com/mrdoob/three.js/issues/9562\nimport { GLTFLoader } from './three/GLTFLoader'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\n\nclass AssetManager {\n  #queue = []\n  #cache = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n    if (!this._getQueued(url)) {\n      this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    }\n\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find(item => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = url => {\n    if (!url) throw new TypeError('Must specify an URL for AssetManager.get()')\n    if (!(url in this.#cache)) {\n      throw new Error(`The asset ${url} is not in the loaded files.`)\n    }\n\n    return this.#cache[url]\n  }\n\n  // Loads a single asset\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the loadSingle function.')\n    }\n\n    try {\n      const itemLoadingStart = Date.now()\n\n      this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n          'color:blue',\n          'color:black'\n        )\n      }\n\n      return item.url\n    } catch (err) {\n      delete this.#cache[item.url]\n      console.error(`📦  Could not load ${item.url}:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function.')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach(fn => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = Date.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = Date.now()\n\n          this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n              'color:blue',\n              'color:black'\n            )\n          }\n        } catch (err) {\n          this.logError(`Skipping ${item.url} from asset loading:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach(fn => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency }\n    )\n\n    if (window.DEBUG) {\n      const errors = this.#logs.filter(log => log.type === 'error')\n\n      this.groupLog(\n        `📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱ ${\n          errors.length > 0\n            ? `%c ⚠️ Skipped ${errors.length} asset${errors.length > 1 ? 's' : ''} `\n            : ''\n        }`,\n        errors.length > 0 ? 'color:white;background:red;' : ''\n      )\n    }\n  }\n\n  // Loads a single asset on demand, returning from\n  // cache if it exists otherwise adding it to the cache\n  // after loading.\n  async _loadItem({ url, type, renderer, ...options }) {\n    if (url in this.#cache) {\n      return this.#cache[url]\n    }\n\n    switch (type) {\n      case 'gltf':\n        return new Promise((resolve, reject) => {\n          new GLTFLoader().load(url, resolve, null, err =>\n            reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n          )\n        })\n      case 'json':\n        return fetch(url).then(response => response.json())\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then(response => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then(response => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(...text) {\n    console.groupCollapsed(...text)\n    this.#logs.forEach(log => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd()\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine,\n// fucking java patterns\nexport default new AssetManager()\n","import * as THREE from 'three'\nimport assets from '../lib/AssetManager'\n\n// elaborated three.js component example\n// containing example usage of\n//   - asset manager\n//   - control panel\n//   - touch events\n//   - postprocessing\n//   - screenshot saving\n\n// preload the suzanne model\nconst suzanneKey = assets.queue({\n  url: 'assets/suzanne.gltf',\n  type: 'gltf',\n})\n\n// preload the materials\nconst albedoKey = assets.queue({\n  url: 'assets/spotty-metal/albedo.jpg',\n  type: 'texture',\n})\nconst metalnessKey = assets.queue({\n  url: 'assets/spotty-metal/metalness.jpg',\n  type: 'texture',\n})\nconst roughnessKey = assets.queue({\n  url: 'assets/spotty-metal/roughness.jpg',\n  type: 'texture',\n})\nconst normalKey = assets.queue({\n  url: 'assets/spotty-metal/normal.jpg',\n  type: 'texture',\n})\n\n// preload the environment map\nconst hdrKey = assets.queue({\n  url: 'assets/ouside-afternoon-blurred-hdr.jpg',\n  type: 'env-map',\n  // equirectangular means it's just one image, projected\n  equirectangular: true,\n})\n\nexport default class Suzanne extends THREE.Group {\n  constructor({ webgl, ...options }) {\n    super(options)\n    this.webgl = webgl\n\n    const suzanneGltf = assets.get(suzanneKey)\n    const suzanne = suzanneGltf.scene.clone()\n\n    const material = new THREE.MeshStandardMaterial({\n      map: assets.get(albedoKey),\n      metalnessMap: assets.get(metalnessKey),\n      roughnessMap: assets.get(roughnessKey),\n      normalMap: assets.get(normalKey),\n      normalScale: new THREE.Vector2(1.5, 1.5),\n      envMap: assets.get(hdrKey),\n      envMapIntensity: 1,\n    })\n\n    // apply the material to the model\n    suzanne.traverse(child => {\n      if (child.isMesh) {\n        child.material = material\n      }\n    })\n\n    // make it a little bigger\n    suzanne.scale.multiplyScalar(1.2)\n\n    this.add(suzanne)\n\n    // set the background as the hdr\n    this.webgl.scene.background = assets.get(hdrKey).renderTarget\n  }\n\n  onPointerDown(event, [x, y]) {\n    // for example, check of we clicked on an\n    // object with raycasting\n    const coords = new THREE.Vector2().set(\n      (x / this.webgl.width) * 2 - 1,\n      (-y / this.webgl.height) * 2 + 1\n    )\n    const raycaster = new THREE.Raycaster()\n    raycaster.setFromCamera(coords, this.webgl.camera)\n    const hits = raycaster.intersectObject(this, true)\n    console.log(hits.length > 0 ? `Hit ${hits[0].object.name}!` : 'No hit')\n  }\n\n  onPointerMove(event, [x, y]) {}\n\n  onPointerUp(event, [x, y]) {}\n\n  update(dt, time) {\n    this.rotation.y += dt * this.webgl.controls.angularVelocity\n  }\n}\n\n// natural hemisphere light from\n// https://threejs.org/examples/#webgl_lights_hemisphere\nexport function addNaturalLight(webgl) {\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6)\n  hemiLight.color.setHSL(0.6, 1, 0.6)\n  hemiLight.groundColor.setHSL(0.095, 1, 0.75)\n  hemiLight.position.set(0, 50, 0)\n  webgl.scene.add(hemiLight)\n\n  const dirLight = new THREE.DirectionalLight(0xffffff, 1)\n  dirLight.color.setHSL(0.1, 1, 0.95)\n  dirLight.position.set(3, 5, 1)\n  dirLight.position.multiplyScalar(50)\n  webgl.scene.add(dirLight)\n\n  dirLight.castShadow = true\n  dirLight.shadow.mapSize.width = 2048\n  dirLight.shadow.mapSize.height = 2048\n\n  var d = 50\n  dirLight.shadow.camera.left = -d\n  dirLight.shadow.camera.right = d\n  dirLight.shadow.camera.top = d\n  dirLight.shadow.camera.bottom = -d\n  dirLight.shadow.camera.far = 3500\n  dirLight.shadow.bias = -0.0001\n}\n\n// demo the save screenshot feature\nexport function addScreenshotButton(webgl) {\n  const screenshotButton = document.createElement('div')\n\n  // normally the styles would be in style.css\n  screenshotButton.style.position = 'fixed'\n  screenshotButton.style.bottom = 0\n  screenshotButton.style.right = 0\n  screenshotButton.style.background = 'tomato'\n  screenshotButton.style.cursor = 'pointer'\n  screenshotButton.style.padding = '8px 16px'\n  screenshotButton.style.color = 'white'\n  screenshotButton.style.fontSize = '24px'\n\n  screenshotButton.textContent = 'Save screenshot'\n  document.body.appendChild(screenshotButton)\n  screenshotButton.addEventListener('click', webgl.saveScreenshot)\n}\n","import * as THREE from 'three'\nimport State from 'controls-state'\nimport WebGLApp from './lib/WebGLApp'\nimport assets from './lib/AssetManager'\nimport Suzanne, { addNaturalLight, addScreenshotButton } from './scene/Suzanne'\nimport { ShaderPass } from './lib/three/ShaderPass'\nimport passVert from './scene/shaders/pass.vert'\nimport vignetteFrag from './scene/shaders/vignette.frag'\n\nwindow.DEBUG = window.location.search.includes('debug')\n\n// grab our canvas\nconst canvas = document.querySelector('#app')\n\n// setup the WebGLRenderer\nconst webgl = new WebGLApp({\n  canvas,\n  // enable transparency\n  alpha: true,\n  // set the scene background color\n  background: '#000',\n  backgroundAlpha: 1,\n  // enable postprocessing\n  // ⚠️ Warning! This disables antialiasing for the scene,\n  // at least until WebGL2 comes along in Three.js\n  postprocessing: true,\n  // show the fps counter from stats.js\n  showFps: window.DEBUG,\n  // enable orbit-controls with a z-distance of 5,\n  // it is recommended to keep the distance the same as\n  // the camera distance:\n  // webgl.camera.position.set(0, 0, 5)\n  orbitControls: window.DEBUG && { distance: 5 },\n  // Add the controls-gui inputs\n  controls: {\n    angularVelocity: State.Slider(0.5, {\n      label: 'Angular Velocity',\n      min: 0.1,\n      max: 30,\n      step: 0.1,\n    }),\n  },\n  hideControls: !window.DEBUG,\n  // enable Cannon.js\n  // world: new CANNON.World(),\n  // enable Tween.js\n  // tween: TWEEN,\n})\n\n// attach it to the window to inspect in the console\nif (window.DEBUG) {\n  window.webgl = webgl\n}\n\n// hide canvas\nwebgl.canvas.style.visibility = 'hidden'\n\n// load any queued assets\nassets.load({ renderer: webgl.renderer }).then(() => {\n  // show canvas\n  webgl.canvas.style.visibility = ''\n\n  // move the camera behind\n  webgl.camera.position.set(0, 0, 5)\n\n  // add any \"WebGL components\" here...\n  // append them to the scene so you can\n  // use them from other components easily\n  webgl.scene.suzanne = new Suzanne({ webgl })\n  webgl.scene.add(webgl.scene.suzanne)\n\n  // lights and other scene related stuff\n  addNaturalLight(webgl)\n\n  // postprocessing\n  const vignette = new ShaderPass({\n    vertexShader: passVert,\n    fragmentShader: vignetteFrag,\n    uniforms: {\n      tDiffuse: { type: 't', value: new THREE.Texture() },\n    },\n  })\n  webgl.composer.addPass(vignette)\n\n  // add the save screenshot button\n  if (window.DEBUG) {\n    addScreenshotButton(webgl)\n  }\n\n  // start animation loop\n  webgl.start()\n  webgl.draw()\n})\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\\n\"","export default \"#define GLSLIFY 1\\nfloat vignette(vec2 uv, float radius, float smoothness) {\\n\\tfloat diff = radius - distance(uv, vec2(0.5, 0.5));\\n\\treturn smoothstep(-smoothness, smoothness, diff);\\n}\\n\\nuniform sampler2D tDiffuse;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec4 texColor = texture2D(tDiffuse, vUv);\\n\\n  float vignetteValue = vignette(vUv, 0.5, 0.5);\\n  texColor.rgb *= vignetteValue;\\n\\n  gl_FragColor = texColor;\\n}\\n\""],"sourceRoot":""}