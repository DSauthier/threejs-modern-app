{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/CannonDebugRenderer.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/scene/Suzanne.js","webpack:///./src/index.js","webpack:///./src/scene/lights.js","webpack:///./src/scene/shaders/pass.vert","webpack:///./src/scene/shaders/vignette.frag"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CannonDebugRenderer","scene","world","_classCallCheck","this","tmpVec0","CANNON","Vec3","tmpVec1","tmpVec2","tmpQuat0","_meshes","_material","THREE","color","wireframe","_sphereGeometry","_boxGeometry","_planeGeometry","_cylinderGeometry","bodies","meshes","shapeWorldPosition","shapeWorldQuaternion","meshIndex","body","shapes","shape","_updateMesh","mesh","quaternion","vmult","shapeOffsets","position","vadd","mult","shapeOrientations","copy","visible","remove","index","_typeMatch","_createMesh","_scaleMesh","material","geo","type","Shape","types","SPHERE","BOX","PLANE","CONVEXPOLYHEDRON","vertices","v","x","y","z","faces","face","a","b","computeBoundingSphere","computeFaceNormals","geometryId","id","TRIMESH","indices","getTriangleVertices","HEIGHTFIELD","xi","yi","k","getConvexTrianglePillar","pillarConvex","pillarOffset","ii","add","geometry","Sphere","Box","Plane","ConvexPolyhedron","Trimesh","Heightfield","radius","scale","set","halfExtents","multiplyScalar","WebGLApp","_this","_ref","arguments","undefined","_ref$background","background","_ref$backgroundAlpha","backgroundAlpha","_ref$fov","fov","_ref$near","near","_ref$far","far","options","_objectWithoutProperties","WebGLApp_classCallCheck","_updateListeners","writable","_tmpTarget","_rafID","_lastTime","_width","_height","resize","_ref2","_ref2$width","width","_ref2$height","height","_ref2$pixelRatio","pixelRatio","renderer","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","updateProjectionMatrix","composer","traverse","obj","draw","saveScreenshot","_ref3","_ref3$width","_ref3$height","_ref3$fileName","fileName","dataURI","canvas","toDataURL","saveDataURI","update","dt","time","orbitControls","up","fromArray","_classPrivateFieldLooseBase","target","lookAt","step","cannonDebugRenderer","forEach","fn","passes","pass","isLastElement","renderToScreen","render","start","requestAnimationFrame","animate","isRunning","stop","cancelAnimationFrame","stats","begin","now","performance","Math","min","maxDeltaTime","end","_len","args","Array","_key","child","_objectSpread","antialias","alpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","sortObjects","domElement","setClearColor","maxPixelRatio","gl","getContext","addEventListener","touchHandler","createTouches","filtered","isDragging","on","ev","pos","postprocessing","EffectComposer","addPass","RenderPass","createOrbitControls","element","parent","distance","showWorldWireframes","showFps","Stats","showPanel","document","appendChild","dom","controls","controlsState","State","hideControls","wrapGUI","expanded","closeControls","style","createElement","innerHTML","head","gpu","getGPUTier","glContext","tier","Number","isMobile","toLowerCase","includes","innerWidth","innerHeight","devicePixelRatio","cursor","blob","dataURIToBlob","link","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","loadTexture","_x","_x2","_loadTexture","_callee","url","texture","image","regeneratorRuntime","wrap","_context","prev","next","encoding","setTextureParams","loadImage","crossorigin","sent","needsUpdate","initTexture","abrupt","t0","Error","concat","opt","flipY","mapping","format","isJPEG","search","repeat","wrapS","wrapT","minFilter","magFilter","generateMipmaps","loadEnvMap","_loadEnvMap","pmremGenerator","cubeRenderTarget","basePath","isHDR","extension","urls","equirectangular","compileEquirectangularShader","fromEquirectangular","dispose","hdr","prefix","replace","postfix","Promise","resolve","reject","HDRCubeTextureLoader","load","map","buildCubeMap","cubeMap","pbr","level","compileCubemapShader","fromCubemap","idx","clamp","floor","cubeLods","AssetManager","TypeError","AssetManager_classPrivateFieldLooseBase","_cache","_onProgressListeners","AssetManager_objectWithoutProperties","_getQueued","_queue","AssetManager_objectSpread","_extractType","find","item","ext","lastIndexOf","test","itemLoadingStart","Date","_loadItem","DEBUG","console","log","prettyMs","error","queue","total","_this2","loadingStart","pMap","_ref4","AssetManager_asyncToGenerator","mark","_callee2","percent","_context2","logError","_x3","_x4","concurrency","_asyncConcurrency","errors","_logs","filter","groupLog","GLTFLoader","err","fetch","then","response","json","arrayBuffer","text","_len2","_key2","_console","groupCollapsed","_console2","_toConsumableArray","groupEnd","lib_AssetManager","suzanneKey","assets","albedoKey","metalnessKey","roughnessKey","normalKey","hdrKey","Suzanne","webgl","Suzanne_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","suzanne","clone","metalnessMap","roughnessMap","normalMap","normalScale","envMap","roughness","metalness","isMesh","event","_slicedToArray","coords","raycaster","setFromCamera","hits","intersectObject","_ref6","_ref5","rotation","angularVelocity","location","querySelector","Slider","label","max","pow","inverseMapping","log10","visibility","hemiLight","setHSL","groundColor","dirLight","addNaturalLight","screenshotButton","vignette","ShaderPass","vertexShader","fragmentShader","uniforms","tDiffuse","bottom","right","padding","fontSize","textContent"],"mappings":"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","file":"app.42bc43dd.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([210,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable no-underscore-dangle */\nimport * as THREE from 'three'\nimport CANNON from 'cannon'\n\n/**\n * Adds Three.js primitives into the scene where all the Cannon bodies and shapes are.\n * @class CannonDebugRenderer\n * @param {THREE.Scene} scene\n * @param {CANNON.World} world\n */\n\nexport default class CannonDebugRenderer {\n  tmpVec0 = new CANNON.Vec3()\n  tmpVec1 = new CANNON.Vec3()\n  tmpVec2 = new CANNON.Vec3()\n  tmpQuat0 = new CANNON.Vec3()\n\n  constructor(scene, world) {\n    this.scene = scene\n    this.world = world\n\n    this._meshes = []\n\n    this._material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true })\n    this._sphereGeometry = new THREE.SphereGeometry(1)\n    this._boxGeometry = new THREE.BoxGeometry(1, 1, 1)\n    this._planeGeometry = new THREE.PlaneGeometry(10, 10, 10, 10)\n    this._cylinderGeometry = new THREE.CylinderGeometry(1, 1, 10, 10)\n  }\n\n  update() {\n    const { bodies } = this.world\n    const meshes = this._meshes\n    const shapeWorldPosition = this.tmpVec0\n    const shapeWorldQuaternion = this.tmpQuat0\n\n    let meshIndex = 0\n\n    for (let i = 0; i !== bodies.length; i++) {\n      const body = bodies[i]\n\n      for (let j = 0; j !== body.shapes.length; j++) {\n        const shape = body.shapes[j]\n\n        this._updateMesh(meshIndex, body, shape)\n\n        const mesh = meshes[meshIndex]\n\n        if (mesh) {\n          // Get world position\n          body.quaternion.vmult(body.shapeOffsets[j], shapeWorldPosition)\n          body.position.vadd(shapeWorldPosition, shapeWorldPosition)\n\n          // Get world quaternion\n          body.quaternion.mult(body.shapeOrientations[j], shapeWorldQuaternion)\n\n          // Copy to meshes\n          mesh.position.copy(shapeWorldPosition)\n          mesh.quaternion.copy(shapeWorldQuaternion)\n\n          // Change the visiblity\n          if ('visible' in body) {\n            mesh.visible = body.visible\n          }\n        }\n\n        meshIndex += 1\n      }\n    }\n\n    for (let i = meshIndex; i < meshes.length; i++) {\n      const mesh = meshes[i]\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n    }\n\n    meshes.length = meshIndex\n  }\n\n  _updateMesh(index, body, shape) {\n    let mesh = this._meshes[index]\n    if (!this._typeMatch(mesh, shape)) {\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n      mesh = this._meshes[index] = this._createMesh(shape)\n    }\n    this._scaleMesh(mesh, shape)\n  }\n\n  _createMesh(shape) {\n    let mesh\n    const material = this._material\n\n    const geo = new THREE.Geometry()\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh = new THREE.Mesh(this._sphereGeometry, material)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh = new THREE.Mesh(this._boxGeometry, material)\n        break\n\n      case CANNON.Shape.types.PLANE:\n        mesh = new THREE.Mesh(this._planeGeometry, material)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        // Create mesh\n\n        // Add vertices\n        for (let i = 0; i < shape.vertices.length; i++) {\n          const v = shape.vertices[i]\n          geo.vertices.push(new THREE.Vector3(v.x, v.y, v.z))\n        }\n\n        for (let i = 0; i < shape.faces.length; i++) {\n          const face = shape.faces[i]\n\n          // add triangles\n          const a = face[0]\n          for (let j = 1; j < face.length - 1; j++) {\n            const b = face[j]\n            const c = face[j + 1]\n            geo.faces.push(new THREE.Face3(a, b, c))\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        for (let i = 0; i < shape.indices.length / 3; i++) {\n          shape.getTriangleVertices(i, this.tmpVec0, this.tmpVec1, this.tmpVec2)\n          geo.vertices.push(\n            new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n            new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n            new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n          )\n          const j = geo.vertices.length - 3\n          geo.faces.push(new THREE.Face3(j, j + 1, j + 2))\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        for (let xi = 0; xi < shape.data.length - 1; xi++) {\n          for (let yi = 0; yi < shape.data[xi].length - 1; yi++) {\n            for (let k = 0; k < 2; k++) {\n              shape.getConvexTrianglePillar(xi, yi, k === 0)\n              this.tmpVec0.copy(shape.pillarConvex.vertices[0])\n              this.tmpVec1.copy(shape.pillarConvex.vertices[1])\n              this.tmpVec2.copy(shape.pillarConvex.vertices[2])\n              this.tmpVec0.vadd(shape.pillarOffset, this.tmpVec0)\n              this.tmpVec1.vadd(shape.pillarOffset, this.tmpVec1)\n              this.tmpVec2.vadd(shape.pillarOffset, this.tmpVec2)\n              geo.vertices.push(\n                new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n                new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n                new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n              )\n              const ii = geo.vertices.length - 3\n              geo.faces.push(new THREE.Face3(ii, ii + 1, ii + 2))\n            }\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n      default:\n        break\n    }\n\n    if (mesh) {\n      this.scene.add(mesh)\n    }\n\n    return mesh\n  }\n\n  _typeMatch(mesh, shape) {\n    if (!mesh) {\n      return false\n    }\n    const geo = mesh.geometry\n    return (\n      (geo instanceof THREE.SphereGeometry && shape instanceof CANNON.Sphere) ||\n      (geo instanceof THREE.BoxGeometry && shape instanceof CANNON.Box) ||\n      (geo instanceof THREE.PlaneGeometry && shape instanceof CANNON.Plane) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.ConvexPolyhedron) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Trimesh) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Heightfield)\n    )\n  }\n\n  _scaleMesh(mesh, shape) {\n    const { radius } = shape\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh.scale.set(radius, radius, radius)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh.scale.copy(shape.halfExtents)\n        mesh.scale.multiplyScalar(2)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        mesh.scale.set(1, 1, 1)\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        mesh.scale.copy(shape.scale)\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        mesh.scale.set(1, 1, 1)\n        break\n      default:\n        break\n    }\n  }\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/webgl/WebGLApp.js\nimport * as THREE from 'three'\nimport createOrbitControls from 'orbit-controls'\nimport createTouches from 'touches'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport State from 'controls-state'\nimport wrapGUI from 'controls-gui'\nimport { getGPUTier } from 'detect-gpu'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport CannonDebugRenderer from './CannonDebugRenderer'\n\nexport default class WebGLApp {\n  #updateListeners = []\n  #tmpTarget = new THREE.Vector3()\n  #rafID\n  #lastTime\n  #width\n  #height\n\n  constructor({\n    background = '#000',\n    backgroundAlpha = 1,\n    fov = 45,\n    near = 0.01,\n    far = 100,\n    ...options\n  } = {}) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false,\n      // enabled for saving screenshots of the canvas,\n      // may wish to disable this for perf reasons\n      preserveDrawingBuffer: true,\n      failIfMajorPerformanceCaveat: true,\n      ...options,\n    })\n\n    this.renderer.sortObjects = false\n    this.canvas = this.renderer.domElement\n\n    this.renderer.setClearColor(background, backgroundAlpha)\n\n    // save the fixed dimensions\n    this.#width = options.width\n    this.#height = options.height\n\n    // clamp pixel ratio for performance\n    this.maxPixelRatio = options.maxPixelRatio || 2\n    // clamp delta to stepping anything too far forward\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n    // setup a basic camera\n    this.camera = new THREE.PerspectiveCamera(fov, 1, near, far)\n\n    this.scene = new THREE.Scene()\n\n    this.gl = this.renderer.getContext()\n\n    this.time = 0\n    this.isRunning = false\n    this.#lastTime = performance.now()\n    this.#rafID = null\n\n    // handle resize events\n    window.addEventListener('resize', this.resize)\n    window.addEventListener('orientationchange', this.resize)\n\n    // force an initial resize event\n    this.resize()\n\n    // __________________________ADDONS__________________________\n\n    // really basic touch handler that propagates through the scene\n    this.touchHandler = createTouches(this.canvas, {\n      target: this.canvas,\n      filtered: true,\n    })\n    this.isDragging = false\n    this.touchHandler.on('start', (ev, pos) => {\n      this.isDragging = true\n      this.traverse('onPointerDown', ev, pos)\n    })\n    this.touchHandler.on('move', (ev, pos) => this.traverse('onPointerMove', ev, pos))\n    this.touchHandler.on('end', (ev, pos) => {\n      this.isDragging = false\n      this.traverse('onPointerUp', ev, pos)\n    })\n\n    // expose a composer for postprocessing passes\n    if (options.postprocessing) {\n      this.composer = new EffectComposer(this.renderer)\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\n    }\n\n    // set up a simple orbit controller\n    if (options.orbitControls) {\n      this.orbitControls = createOrbitControls({\n        element: this.canvas,\n        parent: window,\n        distance: 5,\n        ...(options.orbitControls instanceof Object ? options.orbitControls : {}),\n      })\n\n      // move the camera position accordingly to the orbitcontrols options\n      this.camera.position.fromArray(this.orbitControls.position)\n      this.camera.lookAt(new THREE.Vector3().fromArray(this.orbitControls.target))\n    }\n\n    // Attach the Cannon physics engine\n    if (options.world) {\n      this.world = options.world\n      if (options.showWorldWireframes) {\n        this.cannonDebugRenderer = new CannonDebugRenderer(this.scene, this.world)\n      }\n    }\n\n    // show the fps meter\n    if (options.showFps) {\n      this.stats = new Stats()\n      this.stats.showPanel(0)\n      document.body.appendChild(this.stats.dom)\n    }\n\n    // initialize the controls-state\n    if (options.controls) {\n      const controlsState = State(options.controls)\n      this.controls = options.hideControls\n        ? controlsState\n        : wrapGUI(controlsState, { expanded: !options.closeControls })\n\n      // add the custom controls-gui styles\n      if (!options.hideControls) {\n        const styles = `\n          [class^=\"controlPanel-\"] [class*=\"__field\"]::before {\n            content: initial !important;\n          }\n          [class^=\"controlPanel-\"] [class*=\"__field--button\"] > button::before {\n            content: initial !important;\n          }\n        `\n        const style = document.createElement('style')\n        style.type = 'text/css'\n        style.innerHTML = styles\n        document.head.appendChild(style)\n      }\n    }\n\n    // detect the gpu info\n    const gpu = getGPUTier({ glContext: this.renderer.getContext() })\n    this.gpu = {\n      name: gpu.type,\n      tier: Number(gpu.tier.slice(-1)),\n      isMobile: gpu.tier.toLowerCase().includes('mobile'),\n    }\n  }\n\n  get width() {\n    return this.#width || window.innerWidth\n  }\n\n  get height() {\n    return this.#height || window.innerHeight\n  }\n\n  get pixelRatio() {\n    return Math.min(this.maxPixelRatio, window.devicePixelRatio)\n  }\n\n  resize = ({ width = this.width, height = this.height, pixelRatio = this.pixelRatio } = {}) => {\n    // update pixel ratio if necessary\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio)\n    }\n\n    // setup new size & update camera aspect if necessary\n    this.renderer.setSize(width, height)\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = width / height\n    }\n    this.camera.updateProjectionMatrix()\n\n    // resize also the composer\n    if (this.composer) {\n      this.composer.setSize(pixelRatio * width, pixelRatio * height)\n    }\n\n    // recursively tell all child objects to resize\n    this.scene.traverse(obj => {\n      if (typeof obj.resize === 'function') {\n        obj.resize({\n          width,\n          height,\n          pixelRatio,\n        })\n      }\n    })\n\n    // draw a frame to ensure the new size has been registered visually\n    this.draw()\n    return this\n  }\n\n  // convenience function to trigger a PNG download of the canvas\n  saveScreenshot = ({ width = 2560, height = 1440, fileName = 'image.png' } = {}) => {\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    const dataURI = this.canvas.toDataURL('image/png')\n\n    // reset to default size\n    this.resize()\n    this.draw()\n\n    // save\n    saveDataURI(fileName, dataURI)\n  }\n\n  update = (dt, time) => {\n    if (this.orbitControls) {\n      this.orbitControls.update()\n\n      // reposition to orbit controls\n      this.camera.up.fromArray(this.orbitControls.up)\n      this.camera.position.fromArray(this.orbitControls.position)\n      this.#tmpTarget.fromArray(this.orbitControls.target)\n      this.camera.lookAt(this.#tmpTarget)\n    }\n\n    // recursively tell all child objects to update\n    this.scene.traverse(obj => {\n      if (typeof obj.update === 'function') {\n        obj.update(dt, time)\n      }\n    })\n\n    if (this.world) {\n      // update the Cannon physics engine\n      this.world.step(dt)\n\n      // update the debug wireframe renderer\n      if (this.cannonDebugRenderer) {\n        this.cannonDebugRenderer.update()\n      }\n\n      // recursively tell all child bodies to update\n      this.world.bodies.forEach(body => {\n        if (typeof body.update === 'function') {\n          body.update(dt, time)\n        }\n      })\n    }\n\n    // call the update listeners\n    this.#updateListeners.forEach(fn => fn(dt, time))\n\n    return this\n  }\n\n  onUpdate(fn) {\n    this.#updateListeners.push(fn)\n  }\n\n  draw = () => {\n    if (this.composer) {\n      // make sure to always render the last pass\n      this.composer.passes.forEach((pass, i, passes) => {\n        const isLastElement = i === passes.length - 1\n\n        if (isLastElement) {\n          pass.renderToScreen = true\n        } else {\n          pass.renderToScreen = false\n        }\n      })\n\n      this.composer.render()\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n    return this\n  }\n\n  start = () => {\n    if (this.#rafID !== null) return\n    this.#rafID = window.requestAnimationFrame(this.animate)\n    this.isRunning = true\n    return this\n  }\n\n  stop = () => {\n    if (this.#rafID === null) return\n    window.cancelAnimationFrame(this.#rafID)\n    this.#rafID = null\n    this.isRunning = false\n    return this\n  }\n\n  animate = () => {\n    if (!this.isRunning) return\n    window.requestAnimationFrame(this.animate)\n\n    if (this.stats) this.stats.begin()\n\n    const now = performance.now()\n    const dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n    this.time += dt\n    this.#lastTime = now\n    this.update(dt, this.time)\n    this.draw()\n\n    if (this.stats) this.stats.end()\n  }\n\n  traverse = (fn, ...args) => {\n    this.scene.traverse(child => {\n      if (typeof child[fn] === 'function') {\n        child[fn].apply(child, args)\n      }\n    })\n  }\n\n  get cursor() {\n    return this.canvas.style.cursor\n  }\n\n  set cursor(cursor) {\n    if (cursor) {\n      this.canvas.style.cursor = cursor\n    } else {\n      this.canvas.style.cursor = null\n    }\n  }\n}\n\nfunction saveDataURI(name, dataURI) {\n  const blob = dataURIToBlob(dataURI)\n\n  // force download\n  const link = document.createElement('a')\n  link.download = name\n  link.href = window.URL.createObjectURL(blob)\n  link.onclick = setTimeout(() => {\n    window.URL.revokeObjectURL(blob)\n    link.removeAttribute('href')\n  }, 0)\n\n  link.click()\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadTexture.js\nimport * as THREE from 'three'\nimport loadImage from 'image-promise'\n\nexport default async function loadTexture(url, options) {\n  const texture = new THREE.Texture()\n  texture.name = url\n  texture.encoding = options.encoding || THREE.LinearEncoding\n  setTextureParams(url, texture, options)\n\n  try {\n    const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n    texture.image = image\n    texture.needsUpdate = true\n    if (options.renderer) {\n      // Force texture to be uploaded to GPU immediately,\n      // this will avoid \"jank\" on first rendered frame\n      options.renderer.initTexture(texture)\n    }\n    return texture\n  } catch (err) {\n    throw new Error(`Could not load texture ${url}`)\n  }\n}\n\nfunction setTextureParams(url, texture, opt) {\n  if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n  if (typeof opt.mapping !== 'undefined') {\n    texture.mapping = opt.mapping\n  }\n  if (typeof opt.format !== 'undefined') {\n    texture.format = opt.format\n  } else {\n    // choose a nice default format\n    const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n    texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n  }\n  if (opt.repeat) texture.repeat.copy(opt.repeat)\n  texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n  texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n  texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n  texture.magFilter = opt.magFilter || THREE.LinearFilter\n  texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadEnvMap.js\nimport * as THREE from 'three'\nimport clamp from 'lodash/clamp'\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n  const renderer = options.renderer\n\n  if (!renderer) {\n    throw new Error(`PBR Map requires renderer to passed in the options for ${url}!`)\n  }\n\n  if (options.equirectangular) {\n    const pmremGenerator = new THREE.PMREMGenerator(renderer)\n    pmremGenerator.compileEquirectangularShader()\n\n    const texture = await loadTexture(url, { renderer })\n\n    const cubeRenderTarget = pmremGenerator.fromEquirectangular(texture)\n\n    pmremGenerator.dispose() // dispose PMREMGenerator\n    texture.dispose() // dispose original texture\n    texture.image.data = null // remove image reference\n\n    return cubeRenderTarget.texture\n  }\n\n  const basePath = url\n\n  const isHDR = options.hdr\n  const extension = isHDR ? '.hdr' : '.png'\n  const urls = genCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n  if (isHDR) {\n    // load a float HDR texture\n    return new Promise((resolve, reject) => {\n      new HDRCubeTextureLoader().load(\n        THREE.UnsignedByteType,\n        urls,\n        map => resolve(buildCubeMap(map, options)),\n        null,\n        () => reject(new Error(`Could not load PBR map: ${basePath}`))\n      )\n    })\n  }\n\n  // load a RGBM encoded texture\n  return new Promise((resolve, reject) => {\n    new THREE.CubeTextureLoader().load(\n      urls,\n      cubeMap => {\n        cubeMap.encoding = THREE.RGBM16Encoding\n        resolve(buildCubeMap(cubeMap, options))\n      },\n      null,\n      () => reject(new Error(`Could not load PBR map: ${basePath}`))\n    )\n  })\n}\n\nfunction buildCubeMap(cubeMap, options) {\n  if (options.pbr || typeof options.level === 'number') {\n    // prefilter the environment map for irradiance\n    const pmremGenerator = new THREE.PMREMGenerator(cubeMap)\n    pmremGenerator.compileCubemapShader()\n    if (options.pbr) {\n      const target = pmremGenerator.fromCubemap(cubeMap)\n      cubeMap = target.texture\n    } else {\n      const idx = clamp(Math.floor(options.level), 0, pmremGenerator.cubeLods.length)\n      cubeMap = pmremGenerator.cubeLods[idx].texture\n    }\n    pmremGenerator.dispose()\n  }\n  if (options.mapping) cubeMap.mapping = options.mapping\n  return cubeMap\n}\n\nfunction genCubeUrls(prefix, postfix) {\n  return [\n    `${prefix}px${postfix}`,\n    `${prefix}nx${postfix}`,\n    `${prefix}py${postfix}`,\n    `${prefix}ny${postfix}`,\n    `${prefix}pz${postfix}`,\n    `${prefix}nz${postfix}`,\n  ]\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/AssetManager.js\nimport pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\n\nclass AssetManager {\n  #queue = []\n  #cache = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n    if (!this._getQueued(url)) {\n      this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    }\n\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find(item => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = url => {\n    if (!url) throw new TypeError('Must specify an URL for AssetManager.get()')\n    if (!(url in this.#cache)) {\n      throw new Error(`The asset ${url} is not in the loaded files.`)\n    }\n\n    return this.#cache[url]\n  }\n\n  // Loads a single asset\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the loadSingle function.')\n    }\n\n    try {\n      const itemLoadingStart = Date.now()\n\n      this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n          'color:blue',\n          'color:black'\n        )\n      }\n\n      return item.url\n    } catch (err) {\n      delete this.#cache[item.url]\n      console.error(`📦  Could not load ${item.url}:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function.')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach(fn => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = Date.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = Date.now()\n\n          this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n              'color:blue',\n              'color:black'\n            )\n          }\n        } catch (err) {\n          this.logError(`Skipping ${item.url} from asset loading:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach(fn => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency }\n    )\n\n    if (window.DEBUG) {\n      const errors = this.#logs.filter(log => log.type === 'error')\n\n      this.groupLog(\n        `📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱ ${\n          errors.length > 0\n            ? `%c ⚠️ Skipped ${errors.length} asset${errors.length > 1 ? 's' : ''} `\n            : ''\n        }`,\n        errors.length > 0 ? 'color:white;background:red;' : ''\n      )\n    }\n  }\n\n  // Loads a single asset on demand, returning from\n  // cache if it exists otherwise adding it to the cache\n  // after loading.\n  async _loadItem({ url, type, renderer, ...options }) {\n    if (url in this.#cache) {\n      return this.#cache[url]\n    }\n\n    switch (type) {\n      case 'gltf':\n        return new Promise((resolve, reject) => {\n          new GLTFLoader().load(url, resolve, null, err =>\n            reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n          )\n        })\n      case 'json':\n        return fetch(url).then(response => response.json())\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then(response => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then(response => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(...text) {\n    console.groupCollapsed(...text)\n    this.#logs.forEach(log => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd()\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine,\n// fucking java patterns\nexport default new AssetManager()\n","import * as THREE from 'three'\nimport assets from '../lib/AssetManager'\n\n// elaborated three.js component example\n// containing example usage of\n//   - asset manager\n//   - control panel\n//   - touch events\n//   - postprocessing\n//   - screenshot saving\n\n// preload the suzanne model\nconst suzanneKey = assets.queue({\n  url: 'assets/suzanne.gltf',\n  type: 'gltf',\n})\n\n// preload the materials\nconst albedoKey = assets.queue({\n  url: 'assets/spotty-metal/albedo.jpg',\n  type: 'texture',\n})\nconst metalnessKey = assets.queue({\n  url: 'assets/spotty-metal/metalness.jpg',\n  type: 'texture',\n})\nconst roughnessKey = assets.queue({\n  url: 'assets/spotty-metal/roughness.jpg',\n  type: 'texture',\n})\nconst normalKey = assets.queue({\n  url: 'assets/spotty-metal/normal.jpg',\n  type: 'texture',\n})\n\n// preload the environment map\nconst hdrKey = assets.queue({\n  url: 'assets/ouside-afternoon-blurred-hdr.jpg',\n  type: 'env-map',\n  // equirectangular means it's just one image, projected\n  equirectangular: true,\n})\n\nexport default class Suzanne extends THREE.Group {\n  constructor(webgl, options) {\n    super(options)\n    this.webgl = webgl\n    this.options = options\n\n    const suzanneGltf = assets.get(suzanneKey)\n    const suzanne = suzanneGltf.scene.clone()\n\n    const material = new THREE.MeshStandardMaterial({\n      map: assets.get(albedoKey),\n      metalnessMap: assets.get(metalnessKey),\n      roughnessMap: assets.get(roughnessKey),\n      normalMap: assets.get(normalKey),\n      normalScale: new THREE.Vector2(2, 2),\n      envMap: assets.get(hdrKey),\n      roughness: 0.5,\n      metalness: 0.8,\n    })\n\n    // apply the material to the model\n    suzanne.traverse(child => {\n      if (child.isMesh) {\n        child.material = material\n      }\n    })\n\n    // make it a little bigger\n    suzanne.scale.multiplyScalar(1.2)\n\n    this.add(suzanne)\n\n    // set the background as the hdr\n    this.webgl.scene.background = assets.get(hdrKey)\n  }\n\n  onPointerDown(event, [x, y]) {\n    // for example, check of we clicked on an\n    // object with raycasting\n    const coords = new THREE.Vector2().set(\n      (x / this.webgl.width) * 2 - 1,\n      (-y / this.webgl.height) * 2 + 1\n    )\n    const raycaster = new THREE.Raycaster()\n    raycaster.setFromCamera(coords, this.webgl.camera)\n    const hits = raycaster.intersectObject(this, true)\n    console.log(hits.length > 0 ? `Hit ${hits[0].object.name}!` : 'No hit')\n  }\n\n  onPointerMove(event, [x, y]) {}\n\n  onPointerUp(event, [x, y]) {}\n\n  update(dt, time) {\n    this.rotation.y += dt * this.webgl.controls.angularVelocity\n  }\n}\n\n// demo the save screenshot feature\nexport function addScreenshotButton(webgl) {\n  const screenshotButton = document.createElement('div')\n\n  // normally the styles would be in style.css\n  screenshotButton.style.position = 'fixed'\n  screenshotButton.style.bottom = 0\n  screenshotButton.style.right = 0\n  screenshotButton.style.background = 'tomato'\n  screenshotButton.style.cursor = 'pointer'\n  screenshotButton.style.padding = '8px 16px'\n  screenshotButton.style.color = 'white'\n  screenshotButton.style.fontSize = '24px'\n\n  screenshotButton.textContent = 'Save screenshot'\n  document.body.appendChild(screenshotButton)\n  screenshotButton.addEventListener('click', webgl.saveScreenshot)\n}\n","import * as THREE from 'three'\nimport State from 'controls-state'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport WebGLApp from './lib/WebGLApp'\nimport assets from './lib/AssetManager'\nimport Suzanne, { addScreenshotButton } from './scene/Suzanne'\nimport { addNaturalLight } from './scene/lights'\nimport passVert from './scene/shaders/pass.vert'\nimport vignetteFrag from './scene/shaders/vignette.frag'\n\nwindow.DEBUG = window.location.search.includes('debug')\n\n// grab our canvas\nconst canvas = document.querySelector('#app')\n\n// setup the WebGLRenderer\nconst webgl = new WebGLApp({\n  canvas,\n  // enable transparency\n  alpha: true,\n  // set the scene background color\n  background: '#000',\n  backgroundAlpha: 1,\n  // enable postprocessing\n  // ⚠️ Warning! This disables antialiasing for the scene,\n  // at least until WebGL2 comes along in Three.js\n  postprocessing: true,\n  // show the fps counter from stats.js\n  showFps: window.DEBUG,\n  // enable orbit-controls with a z-distance of 5,\n  orbitControls: window.DEBUG && { distance: 5 },\n  // Add the controls-gui inputs\n  controls: {\n    angularVelocity: State.Slider(0.1, {\n      label: 'Angular Velocity',\n      min: 0.01,\n      max: 50,\n      step: 0.01,\n      mapping: x => Math.pow(10, x),\n      inverseMapping: Math.log10,\n    }),\n  },\n  hideControls: !window.DEBUG,\n  // enable Cannon.js\n  // world: new CANNON.World(),\n})\n\n// attach it to the window to inspect in the console\nif (window.DEBUG) {\n  window.webgl = webgl\n}\n\n// hide canvas\nwebgl.canvas.style.visibility = 'hidden'\n\n// load any queued assets\nassets.load({ renderer: webgl.renderer }).then(() => {\n  // show canvas\n  webgl.canvas.style.visibility = ''\n\n  // move the camera behind,\n  // this will be considered only if orbitControls are disabled\n  webgl.camera.position.set(0, 0, 5)\n\n  // add any \"WebGL components\" here...\n  // append them to the scene so you can\n  // use them from other components easily\n  webgl.scene.suzanne = new Suzanne(webgl)\n  webgl.scene.add(webgl.scene.suzanne)\n\n  // lights and other scene related stuff\n  addNaturalLight(webgl)\n\n  // postprocessing\n  const vignette = new ShaderPass({\n    vertexShader: passVert,\n    fragmentShader: vignetteFrag,\n    uniforms: {\n      tDiffuse: { type: 't', value: new THREE.Texture() },\n    },\n  })\n  webgl.composer.addPass(vignette)\n\n  // add the save screenshot button\n  if (window.DEBUG) {\n    addScreenshotButton(webgl)\n  }\n\n  // start animation loop\n  webgl.start()\n  webgl.draw()\n})\n","import * as THREE from 'three'\n\n// natural hemisphere light from\n// https://threejs.org/examples/#webgl_lights_hemisphere\nexport function addNaturalLight(webgl) {\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6)\n  hemiLight.color.setHSL(0.6, 1, 0.6)\n  hemiLight.groundColor.setHSL(0.095, 1, 0.75)\n  hemiLight.position.set(0, 50, 0)\n  webgl.scene.add(hemiLight)\n\n  const dirLight = new THREE.DirectionalLight(0xffffff, 1)\n  dirLight.color.setHSL(0.1, 1, 0.95)\n  dirLight.position.set(3, 5, 1)\n  dirLight.position.multiplyScalar(50)\n  webgl.scene.add(dirLight)\n}\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\\n\";","export default \"#define GLSLIFY 1\\nfloat vignette(vec2 uv, float radius, float smoothness) {\\n\\tfloat diff = radius - distance(uv, vec2(0.5, 0.5));\\n\\treturn smoothstep(-smoothness, smoothness, diff);\\n}\\n\\nuniform sampler2D tDiffuse;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec4 texColor = texture2D(tDiffuse, vUv);\\n\\n  float vignetteValue = vignette(vUv, 0.5, 0.5);\\n  texColor.rgb *= vignetteValue;\\n\\n  gl_FragColor = texColor;\\n}\\n\";"],"sourceRoot":""}