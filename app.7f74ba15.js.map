{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scene/shaders/vignette.frag","webpack:///./src/lib/three/CopyShader.js","webpack:///./src/lib/three/Pass.js","webpack:///./src/lib/three/ShaderPass.js","webpack:///./src/lib/three/EffectComposer.js","webpack:///./src/lib/three/RenderPass.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/three/GLTFLoader.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/three/HDRCubeTextureLoader.js","webpack:///./src/lib/three/PMREMGenerator.js","webpack:///./src/lib/three/PMREMCubeUVPacker.js","webpack:///./src/lib/three/EquirectangularToCubeGenerator.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/scene/Suzanne.js","webpack:///./src/index.js","webpack:///./src/scene/shaders/pass.vert"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","THREE","uniforms","tDiffuse","opacity","vertexShader","join","fragmentShader","CopyShader","this","enabled","needsSwap","clear","renderToScreen","assign","setSize","width","height","render","renderer","writeBuffer","readBuffer","delta","maskActive","console","error","Pass","shader","textureID","undefined","material","clone","defines","camera","scene","quad","frustumCulled","add","constructor","deltaTime","texture","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","ShaderPass","renderTarget","parameters","minFilter","magFilter","format","stencilBuffer","size","getDrawingBufferSize","renderTarget1","renderTarget2","passes","copyPass","_previousFrameTime","Date","now","swapBuffers","tmp","addPass","pass","insertPass","index","currentRenderTarget","getRenderTarget","il","context","stencilFunc","NOTEQUAL","EQUAL","reset","dispose","EffectComposer","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","RenderPass","WebGLApp","_this","_ref","arguments","_ref$background","background","_ref$backgroundAlpha","backgroundAlpha","_ref$fov","fov","_ref$near","near","_ref$far","far","options","_objectWithoutProperties","_classCallCheck","_updateListeners","writable","_tmpTarget","_rafID","_lastTime","resize","_ref2","_ref2$width","innerWidth","_ref2$height","innerHeight","_ref2$pixelRatio","pixelRatio","Math","min","maxPixelRatio","devicePixelRatio","getPixelRatio","setPixelRatio","isPerspectiveCamera","aspect","updateProjectionMatrix","composer","traverse","obj","draw","saveScreenshot","_ref3","_ref3$width","_ref3$height","_ref3$fileName","fileName","dataURI","canvas","toDataURL","blob","dataURIToBlob","link","document","createElement","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","saveDataURI","update","dt","time","orbitControls","up","fromArray","position","_classPrivateFieldLooseBase","target","lookAt","world","step","bodies","forEach","body","tween","fn","isLastElement","start","requestAnimationFrame","animate","isRunning","stop","cancelAnimationFrame","stats","begin","performance","maxDeltaTime","end","_len","args","Array","_key","child","_objectSpread","antialias","alpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","sortObjects","domElement","addEventListener","touchHandler","createTouches","filtered","on","ev","pos","postprocessing","createOrbitControls","element","parent","distance","showFps","Stats","showPanel","appendChild","dom","panelInputs","panel","controlPanel","theme","panelOptions","GLTFLoader","manager","dracoLoader","GLTFRegistry","objects","remove","removeAll","crossOrigin","load","url","onLoad","onProgress","onError","resourcePath","scope","path","extractUrlBase","itemStart","_onError","e","itemError","itemEnd","loader","setPath","setResponseType","parse","gltf","setCrossOrigin","setResourcePath","setDRACOLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","Error","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","indexOf","warn","parser","GLTFParser","scenes","cameras","animations","glTF","userData","addUnknownExtensionsToUserData","ddsLoader","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","range","type","set","spot","innerConeAngle","outerConeAngle","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","pending","metallicRoughness","pbrMetallicRoughness","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","headerView","DataView","header","magic","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","getDecoderModule","specularGlossinessParams","params","pbrSpecularGlossiness","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","replace","roughness","metalness","roughnessMap","metalnessMap","specular","setHex","glossiness","specularMap","glossinessMap","STANDARD","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","refreshUniforms","geometry","group","uvScaleMap","diffuse","copy","multiplyScalar","isWebGLRenderTarget","matrixAutoUpdate","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","attribute","extendTexture","transform","offset","rotation","scale","repeat","texCoord","needsUpdate","copySampleValue_","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t1","stride","stride2","stride3","td","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","Number","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","image/png","image/jpeg","resolveURL","test","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","_typeof","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","isObjectEqual","a","b","keys","createPrimitiveKey","primitiveDef","dracoExtension","indices","createAttributesKey","attributesKey","sort","cloneBufferAttribute","isInterleavedBufferAttribute","count","itemSize","getX","getY","getZ","getW","cache","primitiveCache","multiplePrimitivesCache","multiPassGeometryCache","textureLoader","fileLoader","addPrimitiveAttributes","assignAttributeAccessor","accessorIndex","accessor","addAttribute","gltfAttributeName","threeAttributeName","setIndex","targets","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","normal","morphPositions","morphNormals","positionAttribute","jl","setXYZ","normalAttribute","morphAttributes","addMorphTargets","markDefs","getMultiDependencies","dependencies","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","getDependencies","defs","def","types","results","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibCacheKey","ib","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","Blob","mimeType","Handlers","flipY","sampler","samplers","wrapS","wrapT","mapName","mapDef","materialIndex","materialType","materialDef","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","loadGeometries","primitives","originalPrimitives","isMultiPass","primitive0","targets0","isMultiPassGeometry","createDracoPrimitive","geometryPromise","cached","promise","geometries","baseGeometry","uuid","createMultiPassGeometryKey","pendingIndices","addGroup","arrayKey","createArrayKeyBufferGeometry","mergeBufferGeometries","baseGeometries","meshIndex","depthTest","originalMaterials","isMultiMaterial","groups","normalizeSkinWeights","drawMode","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","pointsMaterial","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","log","onBeforeRender","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","interpolation","isMesh","track","arraySlice","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","children","light","sanitizeNodeName","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","isGroup","bones","boneInverses","jointNode","mat","matrixWorld","sceneIndex","sceneDef","nodeIds","_x","_x2","_loadTexture","_callee","image","regeneratorRuntime","wrap","_context","prev","next","setTextureParams","loadImage","crossorigin","sent","setTexture2D","abrupt","concat","opt","mapping","isJPEG","search","generateMipmaps","hdrLoader","urls","RGBEByteToRGBFloat","sourceArray","sourceOffset","destArray","destOffset","pow","RGBEByteToRGBHalf","floatView","int32View","Int32Array","toHalf","val","x","bits","anisotropy","loaded","loadHDRData","texData","_parser","numElements","floatdata","halfdata","dataTexture","HDRCubeTextureLoader","shaderMaterial","SAMPLES_PER_LEVEL","faceIndex","mapSize","tFlip","blending","planeMesh","PMREMGenerator","sourceTexture","samplesPerLevel","resolution","monotonicEncoding","cubeLods","numLods","max","gammaInput","gammaOutput","toneMapping","toneMappingExposure","renderToCubeMapTarget","renderToCubeMapTargetFace","testColor","PMREMCubeUVPacker","cubeTextureLods","CubeUVRenderTarget","faceOffsets","textureResolution","offset2","nMips","mipOffsetX","mipOffsetY","mipSize","k","y","setScalar","left","right","top","bottom","fromEquirectangular","tEquirect","boxMesh","equirectangularMap","EquirectangularToCubeGenerator","views","u","v","loadEnvMap","_loadEnvMap","cubemapGenerator","cubeMapTexture","basePath","isHDR","equirectangular","buildCubeMap","hdr","prefix","postfix","cubeMap","pbr","level","pmremGenerator","pmremCubeUVPacker","idx","clamp","floor","AssetManager","TypeError","AssetManager_classPrivateFieldLooseBase","_cache","_onProgressListeners","AssetManager_objectWithoutProperties","_getQueued","_queue","AssetManager_objectSpread","_extractType","find","item","ext","lastIndexOf","itemLoadingStart","_loadItem","DEBUG","prettyMs","queue","total","_this2","loadingStart","pMap","_ref4","AssetManager_asyncToGenerator","mark","_callee2","percent","_context2","logError","_x3","_x4","concurrency","_asyncConcurrency","groupLog","err","fetch","response","arrayBuffer","text","_logs","_len2","_key2","groupCollapsed","_console","_toConsumableArray","groupEnd","lib_AssetManager","suzanneKey","assets","albedoKey","metalnessKey","roughnessKey","normalKey","hdrKey","DEFAULT_ANGULAR_VELOCITY","Suzanne","webgl","Suzanne_objectWithoutProperties","Suzanne_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","angularVelocity","suzanne","inputs","event","_pos","_slicedToArray","coords","raycaster","setFromCamera","hits","intersectObject","location","includes","querySelector","label","initial","style","visibility","hemiLight","setHSL","groundColor","dirLight","castShadow","shadow","bias","addNaturalLight","screenshotButton","vignette","passVert","vignetteFrag","cursor","padding","fontSize","textContent"],"mappings":"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","file":"app.7f74ba15.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([181,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = \"#define GLSLIFY 1\\nfloat vignette(vec2 uv, float radius, float smoothness) {\\n\\tfloat diff = radius - distance(uv, vec2(0.5, 0.5));\\n\\treturn smoothstep(-smoothness, smoothness, diff);\\n}\\n\\nuniform sampler2D tDiffuse;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec4 texColor = texture2D(tDiffuse, vUv);\\n\\n  float vignetteValue = vignette(vUv, 0.5, 0.5);\\n  texColor.rgb *= vignetteValue;\\n\\n  gl_FragColor = texColor;\\n}\\n\"","import * as THREE from 'three'\n\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\":  { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\n\nexport const CopyShader = THREE.CopyShader","import * as THREE from 'three'\n\nTHREE.Pass = function() {\n  // if set to true, the pass is processed by the composer\n  this.enabled = true\n\n  // if set to true, the pass indicates to swap read and write buffer after rendering\n  this.needsSwap = true\n\n  // if set to true, the pass clears its buffer before rendering\n  this.clear = false\n\n  // if set to true, the result of the pass is rendered to screen\n  this.renderToScreen = false\n}\n\nObject.assign(THREE.Pass.prototype, {\n  setSize: function(width, height) {},\n\n  render: function(renderer, writeBuffer, readBuffer, delta, maskActive) {\n    console.error('THREE.Pass: .render() must be implemented in derived pass.')\n  },\n})\n\nexport const Pass = THREE.Pass\n","import * as THREE from 'three'\nimport { Pass } from './Pass'\nTHREE.Pass = Pass\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tthis.scene = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\tthis.quad.frustumCulled = false; // Avoid getting clipped\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.ShaderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t}\n\n\t}\n\n} );\n\n\nexport const ShaderPass = THREE.ShaderPass","import * as THREE from 'three'\nimport { CopyShader } from './CopyShader'\nTHREE.CopyShader = CopyShader\nimport { ShaderPass } from './ShaderPass'\nTHREE.ShaderPass = ShaderPass\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getDrawingBufferSize( new THREE.Vector2() );\n\t\trenderTarget = new THREE.WebGLRenderTarget( size.width, size.height, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( THREE.CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.CopyShader' );\n\n\t}\n\n\tif ( THREE.ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n\tthis._previousFrameTime = Date.now();\n\n};\n\nObject.assign( THREE.EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t\tvar size = this.renderer.getDrawingBufferSize( new THREE.Vector2() );\n\t\tpass.setSize( size.width, size.height );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = ( Date.now() - this._previousFrameTime ) * 0.001;\n\n\t\t}\n\n\t\tthis._previousFrameTime = Date.now();\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( THREE.MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getDrawingBufferSize( new THREE.Vector2() );\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( size.width, size.height );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis.renderTarget1.setSize( width, height );\n\t\tthis.renderTarget2.setSize( width, height );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( width, height );\n\n\t\t}\n\n\t}\n\n} );\n\n\nTHREE.Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( THREE.Pass.prototype, {\n\n\tsetSize: function ( width, height ) {},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n\nexport const EffectComposer = THREE.EffectComposer","import * as THREE from 'three'\nimport { Pass } from './Pass'\nTHREE.Pass = Pass\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\n\nexport const RenderPass = THREE.RenderPass","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/webgl/WebGLApp.js\nimport * as THREE from 'three'\nimport createOrbitControls from 'orbit-controls'\nimport createTouches from 'touches'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport controlPanel from 'control-panel'\nimport { EffectComposer } from './three/EffectComposer'\nimport { RenderPass } from './three/RenderPass'\n\nexport default class WebGLApp {\n  #updateListeners = []\n  #tmpTarget = new THREE.Vector3()\n  #rafID\n  #lastTime\n\n  constructor({\n    background = '#000',\n    backgroundAlpha = 1,\n    fov = 45,\n    near = 0.01,\n    far = 100,\n    ...options\n  } = {}) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false,\n      // enabled for saving screenshots of the canvas,\n      // may wish to disable this for perf reasons\n      preserveDrawingBuffer: true,\n      failIfMajorPerformanceCaveat: true,\n      ...options,\n    })\n\n    this.renderer.sortObjects = false\n    this.canvas = this.renderer.domElement\n\n    this.renderer.setClearColor(background, backgroundAlpha)\n\n    // clamp pixel ratio for performance\n    this.maxPixelRatio = options.maxPixelRatio || 2\n    // clamp delta to stepping anything too far forward\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n    // setup a basic camera\n    this.camera = new THREE.PerspectiveCamera(fov, 1, near, far)\n\n    this.scene = new THREE.Scene()\n\n    this.time = 0\n    this.isRunning = false\n    this.#lastTime = performance.now()\n    this.#rafID = null\n\n    // handle resize events\n    window.addEventListener('resize', this.resize)\n    window.addEventListener('orientationchange', this.resize)\n\n    // force an initial resize event\n    this.resize()\n\n    // __________________________ADDONS__________________________\n\n    // really basic touch handler that propagates through the scene\n    this.touchHandler = createTouches(this.canvas, {\n      target: this.canvas,\n      filtered: true,\n    })\n    this.touchHandler.on('start', (ev, pos) => this.traverse('onTouchStart', ev, pos))\n    this.touchHandler.on('end', (ev, pos) => this.traverse('onTouchEnd', ev, pos))\n    this.touchHandler.on('move', (ev, pos) => this.traverse('onTouchMove', ev, pos))\n\n    // expose a composer for postprocessing passes\n    if (options.postprocessing) {\n      this.composer = new EffectComposer(this.renderer)\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\n    }\n\n    // set up a simple orbit controller\n    if (options.orbitControls) {\n      this.orbitControls = createOrbitControls({\n        element: this.canvas,\n        parent: window,\n        distance: 4,\n        ...(options.orbitControls instanceof Object ? options.orbitControls : {}),\n      })\n    }\n\n    // Attach the Cannon physics engine\n    if (options.world) this.world = options.world\n\n    // Attach Tween.js\n    if (options.tween) this.tween = options.tween\n\n    // show the fps meter\n    if (options.showFps) {\n      this.stats = new Stats()\n      this.stats.showPanel(0)\n      document.body.appendChild(this.stats.dom)\n    }\n\n    // initialize the control panel\n    if (options.panelInputs) {\n      this.panel = controlPanel(options.panelInputs, {\n        theme: 'dark',\n        position: 'top-right',\n        ...(options.panelOptions instanceof Object ? options.panelOptions : {}),\n      })\n    }\n  }\n\n  resize = ({\n    width = window.innerWidth,\n    height = window.innerHeight,\n    pixelRatio = Math.min(this.maxPixelRatio, window.devicePixelRatio),\n  } = {}) => {\n    this.width = width\n    this.height = height\n    this.pixelRatio = pixelRatio\n\n    // update pixel ratio if necessary\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio)\n    }\n\n    // setup new size & update camera aspect if necessary\n    this.renderer.setSize(width, height)\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = width / height\n    }\n    this.camera.updateProjectionMatrix()\n\n    // resize also the composer\n    if (this.composer) {\n      this.composer.setSize(pixelRatio * width, pixelRatio * height)\n    }\n\n    // recursively tell all child objects to resize\n    this.scene.traverse(obj => {\n      if (typeof obj.resize === 'function') {\n        obj.resize({\n          width,\n          height,\n          pixelRatio,\n        })\n      }\n    })\n\n    // draw a frame to ensure the new size has been registered visually\n    this.draw()\n    return this\n  }\n\n  // convenience function to trigger a PNG download of the canvas\n  saveScreenshot = ({ width = 2560, height = 1440, fileName = 'image.png' } = {}) => {\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    const dataURI = this.canvas.toDataURL('image/png')\n\n    // reset to default size\n    this.resize()\n    this.draw()\n\n    // save\n    saveDataURI(fileName, dataURI)\n  }\n\n  update = (dt, time) => {\n    if (this.orbitControls) {\n      this.orbitControls.update()\n\n      // reposition to orbit controls\n      this.camera.up.fromArray(this.orbitControls.up)\n      this.camera.position.fromArray(this.orbitControls.position)\n      this.#tmpTarget.fromArray(this.orbitControls.target)\n      this.camera.lookAt(this.#tmpTarget)\n    }\n\n    // recursively tell all child objects to update\n    this.scene.traverse(obj => {\n      if (typeof obj.update === 'function') {\n        obj.update(dt, time)\n      }\n    })\n\n    if (this.world) {\n      // update the Cannon physics engine\n      this.world.step(dt)\n\n      // recursively tell all child bodies to update\n      this.world.bodies.forEach(body => {\n        if (typeof body.update === 'function') {\n          body.update(dt, time)\n        }\n      })\n    }\n\n    if (this.tween) {\n      // update the Tween.js engine\n      this.tween.update()\n    }\n\n    // call the update listeners\n    this.#updateListeners.forEach(fn => fn(dt, time))\n\n    return this\n  }\n\n  onUpdate(fn) {\n    this.#updateListeners.push(fn)\n  }\n\n  draw = () => {\n    if (this.composer) {\n      // make sure to always render the last pass\n      this.composer.passes.forEach((pass, i, passes) => {\n        const isLastElement = i === passes.length - 1\n\n        if (isLastElement) {\n          pass.renderToScreen = true\n        } else {\n          pass.renderToScreen = false\n        }\n      })\n\n      this.composer.render()\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n    return this\n  }\n\n  start = () => {\n    if (this.#rafID !== null) return\n    this.#rafID = window.requestAnimationFrame(this.animate)\n    this.isRunning = true\n    return this\n  }\n\n  stop = () => {\n    if (this.#rafID === null) return\n    window.cancelAnimationFrame(this.#rafID)\n    this.#rafID = null\n    this.isRunning = false\n    return this\n  }\n\n  animate = () => {\n    if (!this.isRunning) return\n    window.requestAnimationFrame(this.animate)\n\n    if (this.stats) this.stats.begin()\n\n    const now = performance.now()\n    const dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n    this.time += dt\n    this.#lastTime = now\n    this.update(dt, this.time)\n    this.draw()\n\n    if (this.stats) this.stats.end()\n  }\n\n  traverse = (fn, ...args) => {\n    this.scene.traverse(child => {\n      if (typeof child[fn] === 'function') {\n        child[fn].apply(child, args)\n      }\n    })\n  }\n}\n\nfunction saveDataURI(name, dataURI) {\n  const blob = dataURIToBlob(dataURI)\n\n  // force download\n  const link = document.createElement('a')\n  link.download = name\n  link.href = window.URL.createObjectURL(blob)\n  link.onclick = setTimeout(() => {\n    window.URL.revokeObjectURL(blob)\n    link.removeAttribute('href')\n  }, 0)\n\n  link.click()\n}\n","import * as THREE from 'three'\n\n\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nTHREE.GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.dracoLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== undefined ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== undefined ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( value ) {\n\n\t\t\tthis.resourcePath = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] = new GLTFTextureTransformExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( function ( scene, scenes, cameras, animations, json ) {\n\n\t\t\t\tvar glTF = {\n\t\t\t\t\tscene: scene,\n\t\t\t\t\tscenes: scenes,\n\t\t\t\t\tcameras: cameras,\n\t\t\t\t\tanimations: animations,\n\t\t\t\t\tasset: json.asset,\n\t\t\t\t\tparser: parser,\n\t\t\t\t\tuserData: {}\n\t\t\t\t};\n\n\t\t\t\taddUnknownExtensionsToUserData( extensions, glTF, json );\n\n\t\t\t\tonLoad( glTF );\n\n\t\t\t}, onError );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification:\n\t * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension() {\n\n\t\tif ( ! THREE.DDSLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = new THREE.DDSLoader();\n\n\t}\n\n\t/**\n\t * Lights Extension\n\t *\n\t * Specification: PENDING\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new THREE.Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension (pending)\n\t *\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\n\t */\n\tfunction GLTFMaterialsUnlitExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = material.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tTHREE.DRACOLoader.getDecoderModule();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tif ( ! ( attributeName in ATTRIBUTES ) ) continue;\n\n\t\t\tthreeAttributeMap[ ATTRIBUTES[ attributeName ] ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tif ( ATTRIBUTES[ attributeName ] !== undefined && gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ ATTRIBUTES[ attributeName ] ] = componentType;\n\t\t\t\tattributeNormalizedMap[ ATTRIBUTES[ attributeName ] ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification:\n\t */\n\tfunction GLTFTextureTransformExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn THREE.ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( params, material, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = material.extensions[ this.name ];\n\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tparams.vertexShader = shader.vertexShader;\n\t\t\t\tparams.fragmentShader = fragmentShader;\n\t\t\t\tparams.uniforms = uniforms;\n\t\t\t\tparams.defines = { 'STANDARD': '' };\n\n\t\t\t\tparams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tparams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tparams.color.fromArray( array );\n\t\t\t\t\tparams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tparams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tparams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tparams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tparams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {THREE.ShaderMaterial} source\n\t\t\t * @return {THREE.ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\ttarget[ params[ i ] ] = source[ params[ i ] ];\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.envMap ) {\n\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\t\tuniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_TYPE = {\n\t\t5126: Number,\n\t\t//35674: THREE.Matrix2,\n\t\t35675: THREE.Matrix3,\n\t\t35676: THREE.Matrix4,\n\t\t35664: THREE.Vector2,\n\t\t35665: THREE.Vector3,\n\t\t35666: THREE.Vector4,\n\t\t35678: THREE.Texture\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipMapNearestFilter,\n\t\t9985: THREE.LinearMipMapNearestFilter,\n\t\t9986: THREE.NearestMipMapLinearFilter,\n\t\t9987: THREE.LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_SIDES = {\n\t\t1028: THREE.BackSide, // Culling front\n\t\t1029: THREE.FrontSide // Culling back\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\n\t};\n\n\tvar WEBGL_DEPTH_FUNCS = {\n\t\t512: THREE.NeverDepth,\n\t\t513: THREE.LessDepth,\n\t\t514: THREE.EqualDepth,\n\t\t515: THREE.LessEqualDepth,\n\t\t516: THREE.GreaterEqualDepth,\n\t\t517: THREE.NotEqualDepth,\n\t\t518: THREE.GreaterEqualDepth,\n\t\t519: THREE.AlwaysDepth\n\t};\n\n\tvar WEBGL_BLEND_EQUATIONS = {\n\t\t32774: THREE.AddEquation,\n\t\t32778: THREE.SubtractEquation,\n\t\t32779: THREE.ReverseSubtractEquation\n\t};\n\n\tvar WEBGL_BLEND_FUNCS = {\n\t\t0: THREE.ZeroFactor,\n\t\t1: THREE.OneFactor,\n\t\t768: THREE.SrcColorFactor,\n\t\t769: THREE.OneMinusSrcColorFactor,\n\t\t770: THREE.SrcAlphaFactor,\n\t\t771: THREE.OneMinusSrcAlphaFactor,\n\t\t772: THREE.DstAlphaFactor,\n\t\t773: THREE.OneMinusDstAlphaFactor,\n\t\t774: THREE.DstColorFactor,\n\t\t775: THREE.OneMinusDstColorFactor,\n\t\t776: THREE.SrcAlphaSaturateFactor\n\t\t// The followings are not supported by Three.js yet\n\t\t//32769: CONSTANT_COLOR,\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\n\t\t//32771: CONSTANT_ALPHA,\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: THREE.InterpolateSmooth, // We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\n\t\t                                      // KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\n\t\t                                      // using THREE.InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\n\t\t                                      // See KeyframeTrack.optimize() for the detail.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar STATES_ENABLES = {\n\t\t2884: 'CULL_FACE',\n\t\t2929: 'DEPTH_TEST',\n\t\t3042: 'BLEND',\n\t\t3089: 'SCISSOR_TEST',\n\t\t32823: 'POLYGON_OFFSET_FILL',\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': THREE.RGBAFormat,\n\t\t'image/jpeg': THREE.RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial() {\n\n\t\treturn new THREE.MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: THREE.FrontSide\n\t\t} );\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tobject.userData = gltfDef.extras;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\t// TODO: Error-prone use of a callback inside a loop.\n\t\t\t\tvar accessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\t\t\t// Cloning not to pollute original accessor below\n\t\t\t\t\t\t\treturn cloneBufferAttribute( accessor );\n\n\t\t\t\t\t\t} )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( accessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\t// TODO: Error-prone use of a callback inside a loop.\n\t\t\t\tvar accessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\t\t\treturn cloneBufferAttribute( accessor );\n\n\t\t\t\t\t\t} )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( accessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\t\t\t\tvar attributeName = 'morphTarget' + i;\n\n\t\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\t\t// Three.js morph position is absolute value. The formula is\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * ( morphPosition0 - basePosition )\n\t\t\t\t\t//     + weight1 * ( morphPosition1 - basePosition )\n\t\t\t\t\t//     ...\n\t\t\t\t\t// while the glTF one is relative\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * glTFmorphPosition0\n\t\t\t\t\t//     + weight1 * glTFmorphPosition1\n\t\t\t\t\t//     ...\n\t\t\t\t\t// then we need to convert from relative to absolute here.\n\n\t\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\t\tvar positionAttribute = morphPositions[ i ];\n\t\t\t\t\t\tpositionAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpositionAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\t\t// see target.POSITION's comment\n\n\t\t\t\t\tif ( target.NORMAL !== undefined ) {\n\n\t\t\t\t\t\tvar normalAttribute = morphNormals[ i ];\n\t\t\t\t\t\tnormalAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar normal = geometry.attributes.normal;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tnormalAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\tfunction isObjectEqual( a, b ) {\n\n\t\tif ( Object.keys( a ).length !== Object.keys( b ).length ) return false;\n\n\t\tfor ( var key in a ) {\n\n\t\t\tif ( a[ key ] !== b[ key ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\tfunction createArrayKeyBufferGeometry( a ) {\n\n\t\tvar arrayKey = '';\n\n\t\tfor ( var i = 0, il = a.length; i < il; i ++ ) {\n\n\t\t\tarrayKey += ':' + a[ i ].uuid;\n\n\t\t}\n\n\t\treturn arrayKey;\n\n\t}\n\n\tfunction createMultiPassGeometryKey( geometry, primitives ) {\n\n\t\tvar key = geometry.uuid;\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tkey += i + createPrimitiveKey( primitives[ i ] );\n\n\t\t}\n\n\t\treturn key;\n\n\t}\n\n\tfunction cloneBufferAttribute( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tvar count = attribute.count;\n\t\t\tvar itemSize = attribute.itemSize;\n\t\t\tvar array = attribute.array.slice( 0, count * itemSize );\n\n\t\t\tfor ( var i = 0, j = 0; i < count; ++ i ) {\n\n\t\t\t\tarray[ j ++ ] = attribute.getX( i );\n\t\t\t\tif ( itemSize >= 2 ) array[ j ++ ] = attribute.getY( i );\n\t\t\t\tif ( itemSize >= 3 ) array[ j ++ ] = attribute.getZ( i );\n\t\t\t\tif ( itemSize >= 4 ) array[ j ++ ] = attribute.getW( i );\n\n\t\t\t}\n\n\t\t\treturn new THREE.BufferAttribute( array, itemSize, attribute.normalized );\n\n\t\t}\n\n\t\treturn attribute.clone();\n\n\t}\n\n\t/**\n\t * Checks if we can build a single Mesh with MultiMaterial from multiple primitives.\n\t * Returns true if all primitives use the same attributes/morphAttributes/mode\n\t * and also have index. Otherwise returns false.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Boolean}\n\t */\n\tfunction isMultiPassGeometry( primitives ) {\n\n\t\tif ( primitives.length < 2 ) return false;\n\n\t\tvar primitive0 = primitives[ 0 ];\n\t\tvar targets0 = primitive0.targets || [];\n\n\t\tif ( primitive0.indices === undefined ) return false;\n\n\t\tfor ( var i = 1, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\n\t\t\tif ( primitive0.mode !== primitive.mode ) return false;\n\t\t\tif ( primitive.indices === undefined ) return false;\n\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) return false;\n\t\t\tif ( ! isObjectEqual( primitive0.attributes, primitive.attributes ) ) return false;\n\n\t\t\tvar targets = primitive.targets || [];\n\n\t\t\tif ( targets0.length !== targets.length ) return false;\n\n\t\t\tfor ( var j = 0, jl = targets0.length; j < jl; j ++ ) {\n\n\t\t\t\tif ( ! isObjectEqual( targets0[ j ], targets[ j ] ) ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\t\tthis.multiplePrimitivesCache = {};\n\t\tthis.multiPassGeometryCache = {};\n\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar json = this.json;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\t// Fire the callback on complete\n\t\tthis.getMultiDependencies( [\n\n\t\t\t'scene',\n\t\t\t'animation',\n\t\t\t'camera'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar scenes = dependencies.scenes || [];\n\t\t\tvar scene = scenes[ json.scene || 0 ];\n\t\t\tvar animations = dependencies.animations || [];\n\t\t\tvar cameras = dependencies.cameras || [];\n\n\t\t\tonLoad( scene, scenes, cameras, animations, json );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Requests all multiple dependencies of the specified types asynchronously, with caching.\n\t * @param {Array<string>} types\n\t * @return {Promise<Object<Array<Object>>>}\n\t */\n\tGLTFParser.prototype.getMultiDependencies = function ( types ) {\n\n\t\tvar results = {};\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = types.length; i < il; i ++ ) {\n\n\t\t\tvar type = types[ i ];\n\t\t\tvar value = this.getDependencies( type );\n\n\t\t\t// TODO: Error-prone use of a callback inside a loop.\n\t\t\tvalue = value.then( function ( key, value ) {\n\n\t\t\t\tresults[ key ] = value;\n\n\t\t\t}.bind( this, type + ( type === 'mesh' ? 'es' : 's' ) ) );\n\n\t\t\tpending.push( value );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn results;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tarray = new TypedArray( bufferView );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tswitch ( mapName ) {\n\n\t\t\t\tcase 'aoMap':\n\t\t\t\tcase 'emissiveMap':\n\t\t\t\tcase 'metalnessMap':\n\t\t\t\tcase 'normalMap':\n\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\ttexture.format = THREE.RGBFormat;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType( materialDef );\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType( materialDef );\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.addAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ];\n\n\t\t\tif ( ! threeAttributeName ) continue;\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t * If we can build a single BufferGeometry with .groups from multiple primitives, returns one BufferGeometry.\n\t * Otherwise, returns BufferGeometries without .groups as many as primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tvar isMultiPass = isMultiPassGeometry( primitives );\n\t\tvar originalPrimitives;\n\n\t\tif ( isMultiPass ) {\n\n\t\t\toriginalPrimitives = primitives; // save original primitives and use later\n\n\t\t\t// We build a single BufferGeometry with .groups from multiple primitives\n\t\t\t// because all primitives share the same attributes/morph/mode and have indices.\n\n\t\t\tprimitives = [ primitives[ 0 ] ];\n\n\t\t\t// Sets .groups and combined indices to a geometry later in this method.\n\n\t\t}\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( geometries ) {\n\n\t\t\tif ( isMultiPass ) {\n\n\t\t\t\tvar baseGeometry = geometries[ 0 ];\n\n\t\t\t\t// See if we've already created this combined geometry\n\t\t\t\tvar cache = parser.multiPassGeometryCache;\n\t\t\t\tvar cacheKey = createMultiPassGeometryKey( baseGeometry, originalPrimitives );\n\t\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\t\tif ( cached !== null ) return [ cached.geometry ];\n\n\t\t\t\t// Cloning geometry because of index override.\n\t\t\t\t// Attributes can be reused so cloning by myself here.\n\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\tgeometry.name = baseGeometry.name;\n\t\t\t\tgeometry.userData = baseGeometry.userData;\n\n\t\t\t\tfor ( var key in baseGeometry.attributes ) geometry.addAttribute( key, baseGeometry.attributes[ key ] );\n\t\t\t\tfor ( var key in baseGeometry.morphAttributes ) geometry.morphAttributes[ key ] = baseGeometry.morphAttributes[ key ];\n\n\t\t\t\tvar pendingIndices = [];\n\n\t\t\t\tfor ( var i = 0, il = originalPrimitives.length; i < il; i ++ ) {\n\n\t\t\t\t\tpendingIndices.push( parser.getDependency( 'accessor', originalPrimitives[ i ].indices ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pendingIndices ).then( function ( accessors ) {\n\n\t\t\t\t\tvar indices = [];\n\t\t\t\t\tvar offset = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = originalPrimitives.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar accessor = accessors[ i ];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = accessor.count; j < jl; j ++ ) indices.push( accessor.array[ j ] );\n\n\t\t\t\t\t\tgeometry.addGroup( offset, accessor.count, i );\n\n\t\t\t\t\t\toffset += accessor.count;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setIndex( indices );\n\n\t\t\t\t\tcache[ cacheKey ] = { geometry: geometry, baseGeometry: baseGeometry, primitives: originalPrimitives };\n\n\t\t\t\t\treturn [ geometry ];\n\n\t\t\t\t} );\n\n\t\t\t} else if ( geometries.length > 1 && THREE.BufferGeometryUtils !== undefined ) {\n\n\t\t\t\t// Tries to merge geometries with BufferGeometryUtils if possible\n\n\t\t\t\tfor ( var i = 1, il = primitives.length; i < il; i ++ ) {\n\n\t\t\t\t\t// can't merge if draw mode is different\n\t\t\t\t\tif ( primitives[ 0 ].mode !== primitives[ i ].mode ) return geometries;\n\n\t\t\t\t}\n\n\t\t\t\t// See if we've already created this combined geometry\n\t\t\t\tvar cache = parser.multiplePrimitivesCache;\n\t\t\t\tvar cacheKey = createArrayKeyBufferGeometry( geometries );\n\t\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\t\tif ( cached ) {\n\n\t\t\t\t\tif ( cached.geometry !== null ) return [ cached.geometry ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar geometry = THREE.BufferGeometryUtils.mergeBufferGeometries( geometries, true );\n\n\t\t\t\t\tcache[ cacheKey ] = { geometry: geometry, baseGeometries: geometries };\n\n\t\t\t\t\tif ( geometry !== null ) return [ geometry ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial()\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( originalMaterials ) {\n\n\t\t\treturn parser.loadGeometries( primitives ).then( function ( geometries ) {\n\n\t\t\t\tvar isMultiMaterial = geometries.length === 1 && geometries[ 0 ].groups.length > 0;\n\n\t\t\t\tvar meshes = [];\n\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\t// 1. create Mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tvar material = isMultiMaterial ? originalMaterials : originalMaterials[ i ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\tif ( mesh.isSkinnedMesh === true ) mesh.normalizeSkinWeights(); // #15319\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t\t// 2. update Material depending on Mesh and BufferGeometry\n\n\t\t\t\t\tvar materials = isMultiMaterial ? mesh.material : [ mesh.material ];\n\n\t\t\t\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\t\t\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\t\t\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\t\t\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\t\t\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\t\t\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\t\t\t\tfor ( var j = 0, jl = materials.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar material = materials[ j ];\n\n\t\t\t\t\t\tif ( mesh.isPoints ) {\n\n\t\t\t\t\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\t\t\t\t\tvar pointsMaterial = parser.cache.get( cacheKey );\n\n\t\t\t\t\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\t\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\t\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\t\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\t\t\t\t\tpointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\n\n\t\t\t\t\t\t\t\tparser.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial = pointsMaterial;\n\n\t\t\t\t\t\t} else if ( mesh.isLine ) {\n\n\t\t\t\t\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\t\t\t\t\tvar lineMaterial = parser.cache.get( cacheKey );\n\n\t\t\t\t\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\t\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\t\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\t\t\t\t\tlineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\n\n\t\t\t\t\t\t\t\tparser.cache.add( cacheKey, lineMaterial );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial = lineMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Clone the material if it will be modified\n\t\t\t\t\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\t\t\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\t\t\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\t\t\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\t\t\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\t\t\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\t\t\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\t\t\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\t\t\t\t\tvar cachedMaterial = parser.cache.get( cacheKey );\n\n\t\t\t\t\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\t\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t\t\t\t\t: material.clone();\n\n\t\t\t\t\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\t\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\t\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\n\t\t\t\t\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\t\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\t\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\t\t\t\t\tparser.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial = cachedMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ j ] = material;\n\n\t\t\t\t\t\t// workarounds for mesh and geometry\n\n\t\t\t\t\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\t\t\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\n\t\t\t\t\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t\t\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\t\t\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.material = isMultiMaterial ? materials : materials[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar group = new THREE.Group();\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// node can be THREE.Group here but\n\t\t\t\t\t// PATH_PROPERTIES.weights(morphTargetInfluences) should be\n\t\t\t\t\t// the property of a mesh object under group.\n\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\n\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\n\t\t\t\t// be reused by other tracks, make copies here.\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\n\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Here is the trick to enable custom interpolation.\n\t\t\t\t\t// Overrides .createInterpolant in a factory method which creates custom interpolation.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\n\t\t\t\t\t\t// track.getInterpolation() doesn't return valid value for custom interpolant.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\treturn Promise.resolve( new THREE.Bone() );\n\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'camera', nodeDef.camera );\n\n\t\t\t} else if ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light );\n\n\t\t\t} else {\n\n\t\t\t\treturn Promise.resolve( new THREE.Object3D() );\n\n\t\t\t}\n\n\t\t}() ).then( function ( node ) {\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\n\n\t\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar mesh = meshes[ i ];\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new THREE.Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\n\nexport const GLTFLoader = THREE.GLTFLoader","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadTexture.js\nimport * as THREE from 'three'\nimport loadImage from 'image-promise'\n\nexport default async function loadTexture(url, options) {\n  const texture = new THREE.Texture()\n  texture.name = url\n  texture.encoding = options.encoding || THREE.LinearEncoding\n  setTextureParams(url, texture, options)\n\n  try {\n    const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n    texture.image = image\n    texture.needsUpdate = true\n    if (options.renderer) {\n      // Force texture to be uploaded to GPU immediately,\n      // this will avoid \"jank\" on first rendered frame\n      options.renderer.setTexture2D(texture, 0)\n    }\n    return texture\n  } catch (err) {\n    throw new Error(`Could not load texture ${url}`)\n  }\n}\n\nfunction setTextureParams(url, texture, opt) {\n  if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n  if (typeof opt.mapping !== 'undefined') {\n    texture.mapping = opt.mapping\n  }\n  if (typeof opt.format !== 'undefined') {\n    texture.format = opt.format\n  } else {\n    // choose a nice default format\n    const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n    texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n  }\n  if (opt.repeat) texture.repeat.copy(opt.repeat)\n  texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n  texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n  texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n  texture.magFilter = opt.magFilter || THREE.LinearFilter\n  texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","import * as THREE from 'three'\n\n\n/**\n* @author Prashant Sharma / spidersharma03\n* @author Ben Houston / http://clara.io / bhouston\n*/\n\nTHREE.HDRCubeTextureLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t// override in sub classes\n\tthis.hdrLoader = new THREE.RGBELoader();\n\n};\n\nTHREE.HDRCubeTextureLoader.prototype.load = function ( type, urls, onLoad, onProgress, onError ) {\n\n\tvar RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\n\t};\n\n\tvar RGBEByteToRGBHalf = ( function () {\n\n\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\tvar floatView = new Float32Array( 1 );\n\t\tvar int32View = new Int32Array( floatView.buffer );\n\n\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t * used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t * by James Tursa?s half-precision code. */\n\t\tfunction toHalf( val ) {\n\n\t\t\tfloatView[ 0 ] = val;\n\t\t\tvar x = int32View[ 0 ];\n\n\t\t\tvar bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\t\tvar m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\t\tvar e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t * half, return signed zero. */\n\t\t\tif ( e < 103 ) return bits;\n\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\t\tif ( e > 142 ) {\n\n\t\t\t\tbits |= 0x7c00;\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t * not Inf, so make sure we set one mantissa bit too. */\n\t\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\t\treturn bits;\n\n\t\t\t}\n\n\t\t\t/* If exponent underflows but not too much, return a denormal */\n\t\t\tif ( e < 113 ) {\n\n\t\t\t\tm |= 0x0800;\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t * to 1, which is OK. */\n\t\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\t\treturn bits;\n\n\t\t\t}\n\n\t\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t * the exponent, which is OK. */\n\t\t\tbits += m & 1;\n\t\t\treturn bits;\n\n\t\t}\n\n\t\treturn function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = toHalf( sourceArray[ sourceOffset + 0 ] * scale );\n\t\t\tdestArray[ destOffset + 1 ] = toHalf( sourceArray[ sourceOffset + 1 ] * scale );\n\t\t\tdestArray[ destOffset + 2 ] = toHalf( sourceArray[ sourceOffset + 2 ] * scale );\n\n\t\t};\n\n\t} )();\n\n\t//\n\n\tvar texture = new THREE.CubeTexture();\n\n\ttexture.type = type;\n\ttexture.encoding = ( type === THREE.UnsignedByteType ) ? THREE.RGBEEncoding : THREE.LinearEncoding;\n\ttexture.format = ( type === THREE.UnsignedByteType ) ? THREE.RGBAFormat : THREE.RGBFormat;\n\ttexture.minFilter = ( texture.encoding === THREE.RGBEEncoding ) ? THREE.NearestFilter : THREE.LinearFilter;\n\ttexture.magFilter = ( texture.encoding === THREE.RGBEEncoding ) ? THREE.NearestFilter : THREE.LinearFilter;\n\ttexture.generateMipmaps = ( texture.encoding !== THREE.RGBEEncoding );\n\ttexture.anisotropy = 0;\n\n\tvar scope = this;\n\n\tvar loaded = 0;\n\n\tfunction loadHDRData( i, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( urls[ i ], function ( buffer ) {\n\n\t\t\tloaded ++;\n\n\t\t\tvar texData = scope.hdrLoader._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( type === THREE.FloatType ) {\n\n\t\t\t\tvar numElements = ( texData.data.length / 4 ) * 3;\n\t\t\t\tvar floatdata = new Float32Array( numElements );\n\n\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBFloat( texData.data, j * 4, floatdata, j * 3 );\n\n\t\t\t\t}\n\n\t\t\t\ttexData.data = floatdata;\n\n\t\t\t} else if ( type === THREE.HalfFloatType ) {\n\n\t\t\t\tvar numElements = ( texData.data.length / 4 ) * 3;\n\t\t\t\tvar halfdata = new Uint16Array( numElements );\n\n\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBHalf( texData.data, j * 4, halfdata, j * 3 );\n\n\t\t\t\t}\n\n\t\t\t\ttexData.data = halfdata;\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture[ i ].images = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\tvar dataTexture = new THREE.DataTexture( texData.data, texData.width, texData.height );\n\t\t\t\tdataTexture.format = texture.format;\n\t\t\t\tdataTexture.type = texture.type;\n\t\t\t\tdataTexture.encoding = texture.encoding;\n\t\t\t\tdataTexture.minFilter = texture.minFilter;\n\t\t\t\tdataTexture.magFilter = texture.magFilter;\n\t\t\t\tdataTexture.generateMipmaps = texture.generateMipmaps;\n\n\t\t\t\ttexture.images[ i ] = dataTexture;\n\n\t\t\t}\n\n\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tfor ( var i = 0; i < urls.length; i ++ ) {\n\n\t\tloadHDRData( i, onLoad, onProgress, onError );\n\n\t}\n\n\treturn texture;\n\n};\n\nTHREE.HDRCubeTextureLoader.prototype.setPath = function ( value ) {\n\n\tthis.path = value;\n\treturn this;\n\n};\n\n\nexport const HDRCubeTextureLoader = THREE.HDRCubeTextureLoader","import * as THREE from 'three'\n\n\n/**\n * @author Prashant Sharma / spidersharma03\n * @author Ben Houston / bhouston, https://clara.io\n *\n * To avoid cube map seams, I create an extra pixel around each face. This way when the cube map is\n * sampled by an application later(with a little care by sampling the centre of the texel), the extra 1 border\n *\tof pixels makes sure that there is no seams artifacts present. This works perfectly for cubeUV format as\n *\twell where the 6 faces can be arranged in any manner whatsoever.\n * Code in the beginning of fragment shader's main function does this job for a given resolution.\n *\tRun Scene_PMREM_Test.html in the examples directory to see the sampling from the cube lods generated\n *\tby this class.\n */\n\nTHREE.PMREMGenerator = ( function () {\n\n\tvar shader = getShader();\n\tvar camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0.0, 1000 );\n\tvar scene = new THREE.Scene();\n\tvar planeMesh = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2, 0 ), shader );\n\tplaneMesh.material.side = THREE.DoubleSide;\n\tscene.add( planeMesh );\n\tscene.add( camera );\n\n\tvar PMREMGenerator = function ( sourceTexture, samplesPerLevel, resolution ) {\n\n\t\tthis.sourceTexture = sourceTexture;\n\t\tthis.resolution = ( resolution !== undefined ) ? resolution : 256; // NODE: 256 is currently hard coded in the glsl code for performance reasons\n\t\tthis.samplesPerLevel = ( samplesPerLevel !== undefined ) ? samplesPerLevel : 32;\n\n\t\tvar monotonicEncoding = ( this.sourceTexture.encoding === THREE.LinearEncoding ) ||\n\t\t\t( this.sourceTexture.encoding === THREE.GammaEncoding ) || ( this.sourceTexture.encoding === THREE.sRGBEncoding );\n\n\t\tthis.sourceTexture.minFilter = ( monotonicEncoding ) ? THREE.LinearFilter : THREE.NearestFilter;\n\t\tthis.sourceTexture.magFilter = ( monotonicEncoding ) ? THREE.LinearFilter : THREE.NearestFilter;\n\t\tthis.sourceTexture.generateMipmaps = this.sourceTexture.generateMipmaps && monotonicEncoding;\n\n\t\tthis.cubeLods = [];\n\n\t\tvar size = this.resolution;\n\t\tvar params = {\n\t\t\tformat: this.sourceTexture.format,\n\t\t\tmagFilter: this.sourceTexture.magFilter,\n\t\t\tminFilter: this.sourceTexture.minFilter,\n\t\t\ttype: this.sourceTexture.type,\n\t\t\tgenerateMipmaps: this.sourceTexture.generateMipmaps,\n\t\t\tanisotropy: this.sourceTexture.anisotropy,\n\t\t\tencoding: this.sourceTexture.encoding\n\t\t};\n\n\t\t// how many LODs fit in the given CubeUV Texture.\n\t\tthis.numLods = Math.log( size ) / Math.log( 2 ) - 2; // IE11 doesn't support Math.log2\n\n\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\tvar renderTarget = new THREE.WebGLRenderTargetCube( size, size, params );\n\t\t\trenderTarget.texture.name = \"PMREMGenerator.cube\" + i;\n\t\t\tthis.cubeLods.push( renderTarget );\n\t\t\tsize = Math.max( 16, size / 2 );\n\n\t\t}\n\n\t};\n\n\tPMREMGenerator.prototype = {\n\n\t\tconstructor: PMREMGenerator,\n\n\t\t/*\n\t\t * Prashant Sharma / spidersharma03: More thought and work is needed here.\n\t\t * Right now it's a kind of a hack to use the previously convolved map to convolve the current one.\n\t\t * I tried to use the original map to convolve all the lods, but for many textures(specially the high frequency)\n\t\t * even a high number of samples(1024) dosen't lead to satisfactory results.\n\t\t * By using the previous convolved maps, a lower number of samples are generally sufficient(right now 32, which\n\t\t * gives okay results unless we see the reflection very carefully, or zoom in too much), however the math\n\t\t * goes wrong as the distribution function tries to sample a larger area than what it should be. So I simply scaled\n\t\t * the roughness by 0.9(totally empirical) to try to visually match the original result.\n\t\t * The condition \"if(i <5)\" is also an attemt to make the result match the original result.\n\t\t * This method requires the most amount of thinking I guess. Here is a paper which we could try to implement in future::\n\t\t * https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch20.html\n\t\t */\n\t\tupdate: function ( renderer ) {\n\n\t\t\t// Texture should only be flipped for CubeTexture, not for\n\t\t\t// a Texture created via THREE.WebGLRenderTargetCube.\n\t\t\tvar tFlip = ( this.sourceTexture.isCubeTexture ) ? - 1 : 1;\n\n\t\t\tshader.defines[ 'SAMPLES_PER_LEVEL' ] = this.samplesPerLevel;\n\t\t\tshader.uniforms[ 'faceIndex' ].value = 0;\n\t\t\tshader.uniforms[ 'envMap' ].value = this.sourceTexture;\n\t\t\tshader.envMap = this.sourceTexture;\n\t\t\tshader.needsUpdate = true;\n\n\t\t\tvar gammaInput = renderer.gammaInput;\n\t\t\tvar gammaOutput = renderer.gammaOutput;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar toneMappingExposure = renderer.toneMappingExposure;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.toneMapping = THREE.LinearToneMapping;\n\t\t\trenderer.toneMappingExposure = 1.0;\n\t\t\trenderer.gammaInput = false;\n\t\t\trenderer.gammaOutput = false;\n\n\t\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\t\tvar r = i / ( this.numLods - 1 );\n\t\t\t\tshader.uniforms[ 'roughness' ].value = r * 0.9; // see comment above, pragmatic choice\n\t\t\t\t// Only apply the tFlip for the first LOD\n\t\t\t\tshader.uniforms[ 'tFlip' ].value = ( i == 0 ) ? tFlip : 1;\n\t\t\t\tvar size = this.cubeLods[ i ].width;\n\t\t\t\tshader.uniforms[ 'mapSize' ].value = size;\n\t\t\t\tthis.renderToCubeMapTarget( renderer, this.cubeLods[ i ] );\n\n\t\t\t\tif ( i < 5 ) shader.uniforms[ 'envMap' ].value = this.cubeLods[ i ].texture;\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.toneMappingExposure = toneMappingExposure;\n\t\t\trenderer.gammaInput = gammaInput;\n\t\t\trenderer.gammaOutput = gammaOutput;\n\n\t\t},\n\n\t\trenderToCubeMapTarget: function ( renderer, renderTarget ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tthis.renderToCubeMapTargetFace( renderer, renderTarget, i );\n\n\t\t\t}\n\n\t\t},\n\n\t\trenderToCubeMapTargetFace: function ( renderer, renderTarget, faceIndex ) {\n\n\t\t\tshader.uniforms[ 'faceIndex' ].value = faceIndex;\n\t\t\trenderer.setRenderTarget( renderTarget, faceIndex );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, camera );\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tfor ( var i = 0, l = this.cubeLods.length; i < l; i ++ ) {\n\n\t\t\t\tthis.cubeLods[ i ].dispose();\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\tfunction getShader() {\n\n\t\tvar shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"SAMPLES_PER_LEVEL\": 20,\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"faceIndex\": { value: 0 },\n\t\t\t\t\"roughness\": { value: 0.5 },\n\t\t\t\t\"mapSize\": { value: 0.5 },\n\t\t\t\t\"envMap\": { value: null },\n\t\t\t\t\"tFlip\": { value: - 1 },\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\n\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform int faceIndex;\\n\\\n\t\t\t\tuniform float roughness;\\n\\\n\t\t\t\tuniform samplerCube envMap;\\n\\\n\t\t\t\tuniform float mapSize;\\n\\\n\t\t\t\tuniform float tFlip;\\n\\\n\t\t\t\t\\n\\\n\t\t\t\tfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\\n\t\t\t\t\tfloat a = ggxRoughness + 0.0001;\\n\\\n\t\t\t\t\ta *= a;\\n\\\n\t\t\t\t\treturn ( 2.0 / a - 2.0 );\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tvec3 ImportanceSamplePhong(vec2 uv, mat3 vecSpace, float specPow) {\\n\\\n\t\t\t\t\tfloat phi = uv.y * 2.0 * PI;\\n\\\n\t\t\t\t\tfloat cosTheta = pow(1.0 - uv.x, 1.0 / (specPow + 1.0));\\n\\\n\t\t\t\t\tfloat sinTheta = sqrt(1.0 - cosTheta * cosTheta);\\n\\\n\t\t\t\t\tvec3 sampleDir = vec3(cos(phi) * sinTheta, sin(phi) * sinTheta, cosTheta);\\n\\\n\t\t\t\t\treturn vecSpace * sampleDir;\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tvec3 ImportanceSampleGGX( vec2 uv, mat3 vecSpace, float Roughness )\\n\\\n\t\t\t\t{\\n\\\n\t\t\t\t\tfloat a = Roughness * Roughness;\\n\\\n\t\t\t\t\tfloat Phi = 2.0 * PI * uv.x;\\n\\\n\t\t\t\t\tfloat CosTheta = sqrt( (1.0 - uv.y) / ( 1.0 + (a*a - 1.0) * uv.y ) );\\n\\\n\t\t\t\t\tfloat SinTheta = sqrt( 1.0 - CosTheta * CosTheta );\\n\\\n\t\t\t\t\treturn vecSpace * vec3(SinTheta * cos( Phi ), SinTheta * sin( Phi ), CosTheta);\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tmat3 matrixFromVector(vec3 n) {\\n\\\n\t\t\t\t\tfloat a = 1.0 / (1.0 + n.z);\\n\\\n\t\t\t\t\tfloat b = -n.x * n.y * a;\\n\\\n\t\t\t\t\tvec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\\n\\\n\t\t\t\t\tvec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\\n\\\n\t\t\t\t\treturn mat3(b1, b2, n);\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\t\\n\\\n\t\t\t\tvec4 testColorMap(float Roughness) {\\n\\\n\t\t\t\t\tvec4 color;\\n\\\n\t\t\t\t\tif(faceIndex == 0)\\n\\\n\t\t\t\t\t\tcolor = vec4(1.0,0.0,0.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 1)\\n\\\n\t\t\t\t\t\tcolor = vec4(0.0,1.0,0.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 2)\\n\\\n\t\t\t\t\t\tcolor = vec4(0.0,0.0,1.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 3)\\n\\\n\t\t\t\t\t\tcolor = vec4(1.0,1.0,0.0,1.0);\\n\\\n\t\t\t\t\telse if(faceIndex == 4)\\n\\\n\t\t\t\t\t\tcolor = vec4(0.0,1.0,1.0,1.0);\\n\\\n\t\t\t\t\telse\\n\\\n\t\t\t\t\t\tcolor = vec4(1.0,0.0,1.0,1.0);\\n\\\n\t\t\t\t\tcolor *= ( 1.0 - Roughness );\\n\\\n\t\t\t\t\treturn color;\\n\\\n\t\t\t\t}\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec3 sampleDirection;\\n\\\n\t\t\t\t\tvec2 uv = vUv*2.0 - 1.0;\\n\\\n\t\t\t\t\tfloat offset = -1.0/mapSize;\\n\\\n\t\t\t\t\tconst float a = -1.0;\\n\\\n\t\t\t\t\tconst float b = 1.0;\\n\\\n\t\t\t\t\tfloat c = -1.0 + offset;\\n\\\n\t\t\t\t\tfloat d = 1.0 - offset;\\n\\\n\t\t\t\t\tfloat bminusa = b - a;\\n\\\n\t\t\t\t\tuv.x = (uv.x - a)/bminusa * d - (uv.x - b)/bminusa * c;\\n\\\n\t\t\t\t\tuv.y = (uv.y - a)/bminusa * d - (uv.y - b)/bminusa * c;\\n\\\n\t\t\t\t\tif (faceIndex==0) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(1.0, -uv.y, -uv.x);\\n\\\n\t\t\t\t\t} else if (faceIndex==1) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(-1.0, -uv.y, uv.x);\\n\\\n\t\t\t\t\t} else if (faceIndex==2) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, 1.0, uv.y);\\n\\\n\t\t\t\t\t} else if (faceIndex==3) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, -1.0, -uv.y);\\n\\\n\t\t\t\t\t} else if (faceIndex==4) {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(uv.x, -uv.y, 1.0);\\n\\\n\t\t\t\t\t} else {\\n\\\n\t\t\t\t\t\tsampleDirection = vec3(-uv.x, -uv.y, -1.0);\\n\\\n\t\t\t\t\t}\\n\\\n\t\t\t\t\tvec3 correctedDirection = vec3( tFlip * sampleDirection.x, sampleDirection.yz );\\n\\\n\t\t\t\t\tmat3 vecSpace = matrixFromVector( normalize( correctedDirection ) );\\n\\\n\t\t\t\t\tvec3 rgbColor = vec3(0.0);\\n\\\n\t\t\t\t\tconst int NumSamples = SAMPLES_PER_LEVEL;\\n\\\n\t\t\t\t\tvec3 vect;\\n\\\n\t\t\t\t\tfloat weight = 0.0;\\n\\\n\t\t\t\t\tfor( int i = 0; i < NumSamples; i ++ ) {\\n\\\n\t\t\t\t\t\tfloat sini = sin(float(i));\\n\\\n\t\t\t\t\t\tfloat cosi = cos(float(i));\\n\\\n\t\t\t\t\t\tfloat r = rand(vec2(sini, cosi));\\n\\\n\t\t\t\t\t\tvect = ImportanceSampleGGX(vec2(float(i) / float(NumSamples), r), vecSpace, roughness);\\n\\\n\t\t\t\t\t\tfloat dotProd = dot(vect, normalize(sampleDirection));\\n\\\n\t\t\t\t\t\tweight += dotProd;\\n\\\n\t\t\t\t\t\tvec3 color = envMapTexelToLinear(textureCube(envMap, vect)).rgb;\\n\\\n\t\t\t\t\t\trgbColor.rgb += color;\\n\\\n\t\t\t\t\t}\\n\\\n\t\t\t\t\trgbColor /= float(NumSamples);\\n\\\n\t\t\t\t\t//rgbColor = testColorMap( roughness ).rgb;\\n\\\n\t\t\t\t\tgl_FragColor = linearToOutputTexel( vec4( rgbColor, 1.0 ) );\\n\\\n\t\t\t\t}\",\n\n\t\t\tblending: THREE.NoBlending\n\n\t\t} );\n\n\t\tshaderMaterial.type = 'PMREMGenerator';\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\treturn PMREMGenerator;\n\n} )();\n\n\nexport const PMREMGenerator = THREE.PMREMGenerator","import * as THREE from 'three'\n\n\n/**\n * @author Prashant Sharma / spidersharma03\n * @author Ben Houston / bhouston, https://clara.io\n *\n * This class takes the cube lods(corresponding to different roughness values), and creates a single cubeUV\n * Texture. The format for a given roughness set of faces is simply::\n * +X+Y+Z\n * -X-Y-Z\n * For every roughness a mip map chain is also saved, which is essential to remove the texture artifacts due to\n * minification.\n * Right now for every face a PlaneMesh is drawn, which leads to a lot of geometry draw calls, but can be replaced\n * later by drawing a single buffer and by sending the appropriate faceIndex via vertex attributes.\n * The arrangement of the faces is fixed, as assuming this arrangement, the sampling function has been written.\n */\n\nTHREE.PMREMCubeUVPacker = ( function () {\n\n\tvar camera = new THREE.OrthographicCamera();\n\tvar scene = new THREE.Scene();\n\tvar shader = getShader();\n\n\tvar PMREMCubeUVPacker = function ( cubeTextureLods ) {\n\n\t\tthis.cubeLods = cubeTextureLods;\n\t\tvar size = cubeTextureLods[ 0 ].width * 4;\n\n\t\tvar sourceTexture = cubeTextureLods[ 0 ].texture;\n\t\tvar params = {\n\t\t\tformat: sourceTexture.format,\n\t\t\tmagFilter: sourceTexture.magFilter,\n\t\t\tminFilter: sourceTexture.minFilter,\n\t\t\ttype: sourceTexture.type,\n\t\t\tgenerateMipmaps: sourceTexture.generateMipmaps,\n\t\t\tanisotropy: sourceTexture.anisotropy,\n\t\t\tencoding: ( sourceTexture.encoding === THREE.RGBEEncoding ) ? THREE.RGBM16Encoding : sourceTexture.encoding\n\t\t};\n\n\t\tif ( params.encoding === THREE.RGBM16Encoding ) {\n\n\t\t\tparams.magFilter = THREE.LinearFilter;\n\t\t\tparams.minFilter = THREE.LinearFilter;\n\n\t\t}\n\n\t\tthis.CubeUVRenderTarget = new THREE.WebGLRenderTarget( size, size, params );\n\t\tthis.CubeUVRenderTarget.texture.name = \"PMREMCubeUVPacker.cubeUv\";\n\t\tthis.CubeUVRenderTarget.texture.mapping = THREE.CubeUVReflectionMapping;\n\n\t\tthis.objects = [];\n\n\t\tvar geometry = new THREE.PlaneBufferGeometry( 1, 1 );\n\n\t\tvar faceOffsets = [];\n\t\tfaceOffsets.push( new THREE.Vector2( 0, 0 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 1, 0 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 2, 0 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 0, 1 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 1, 1 ) );\n\t\tfaceOffsets.push( new THREE.Vector2( 2, 1 ) );\n\n\t\tvar textureResolution = size;\n\t\tsize = cubeTextureLods[ 0 ].width;\n\n\t\tvar offset2 = 0;\n\t\tvar c = 4.0;\n\t\tthis.numLods = Math.log( cubeTextureLods[ 0 ].width ) / Math.log( 2 ) - 2; // IE11 doesn't support Math.log2\n\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\tvar offset1 = ( textureResolution - textureResolution / c ) * 0.5;\n\t\t\tif ( size > 16 ) c *= 2;\n\t\t\tvar nMips = size > 16 ? 6 : 1;\n\t\t\tvar mipOffsetX = 0;\n\t\t\tvar mipOffsetY = 0;\n\t\t\tvar mipSize = size;\n\n\t\t\tfor ( var j = 0; j < nMips; j ++ ) {\n\n\t\t\t\t// Mip Maps\n\t\t\t\tfor ( var k = 0; k < 6; k ++ ) {\n\n\t\t\t\t\t// 6 Cube Faces\n\t\t\t\t\tvar material = shader.clone();\n\t\t\t\t\tmaterial.uniforms[ 'envMap' ].value = this.cubeLods[ i ].texture;\n\t\t\t\t\tmaterial.envMap = this.cubeLods[ i ].texture;\n\t\t\t\t\tmaterial.uniforms[ 'faceIndex' ].value = k;\n\t\t\t\t\tmaterial.uniforms[ 'mapSize' ].value = mipSize;\n\n\t\t\t\t\tvar planeMesh = new THREE.Mesh( geometry, material );\n\t\t\t\t\tplaneMesh.position.x = faceOffsets[ k ].x * mipSize - offset1 + mipOffsetX;\n\t\t\t\t\tplaneMesh.position.y = faceOffsets[ k ].y * mipSize - offset1 + offset2 + mipOffsetY;\n\t\t\t\t\tplaneMesh.material.side = THREE.BackSide;\n\t\t\t\t\tplaneMesh.scale.setScalar( mipSize );\n\t\t\t\t\tthis.objects.push( planeMesh );\n\n\t\t\t\t}\n\t\t\t\tmipOffsetY += 1.75 * mipSize;\n\t\t\t\tmipOffsetX += 1.25 * mipSize;\n\t\t\t\tmipSize /= 2;\n\n\t\t\t}\n\t\t\toffset2 += 2 * size;\n\t\t\tif ( size > 16 ) size /= 2;\n\n\t\t}\n\n\t};\n\n\tPMREMCubeUVPacker.prototype = {\n\n\t\tconstructor: PMREMCubeUVPacker,\n\n\t\tupdate: function ( renderer ) {\n\n\t\t\tvar size = this.cubeLods[ 0 ].width * 4;\n\t\t\t// top and bottom are swapped for some reason?\n\t\t\tcamera.left = - size * 0.5;\n\t\t\tcamera.right = size * 0.5;\n\t\t\tcamera.top = - size * 0.5;\n\t\t\tcamera.bottom = size * 0.5;\n\t\t\tcamera.near = 0;\n\t\t\tcamera.far = 1;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\tfor ( var i = 0; i < this.objects.length; i ++ ) {\n\n\t\t\t\tscene.add( this.objects[ i ] );\n\n\t\t\t}\n\n\t\t\tvar gammaInput = renderer.gammaInput;\n\t\t\tvar gammaOutput = renderer.gammaOutput;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar toneMappingExposure = renderer.toneMappingExposure;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.gammaInput = false;\n\t\t\trenderer.gammaOutput = false;\n\t\t\trenderer.toneMapping = THREE.LinearToneMapping;\n\t\t\trenderer.toneMappingExposure = 1.0;\n\t\t\trenderer.setRenderTarget( this.CubeUVRenderTarget );\n\t\t\trenderer.render( scene, camera );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.toneMappingExposure = toneMappingExposure;\n\t\t\trenderer.gammaInput = gammaInput;\n\t\t\trenderer.gammaOutput = gammaOutput;\n\n\t\t\tfor ( var i = 0; i < this.objects.length; i ++ ) {\n\n\t\t\t\tscene.remove( this.objects[ i ] );\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tfor ( var i = 0, l = this.objects.length; i < l; i ++ ) {\n\n\t\t\t\tthis.objects[ i ].material.dispose();\n\n\t\t\t}\n\n\t\t\tthis.objects[ 0 ].geometry.dispose();\n\n\t\t}\n\n\t};\n\n\tfunction getShader() {\n\n\t\tvar shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: {\n\t\t\t\t\"faceIndex\": { value: 0 },\n\t\t\t\t\"mapSize\": { value: 0 },\n\t\t\t\t\"envMap\": { value: null },\n\t\t\t\t\"testColor\": { value: new THREE.Vector3( 1, 1, 1 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n        \"precision highp float;\\\n        varying vec2 vUv;\\\n        void main() {\\\n          vUv = uv;\\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\n        }\",\n\n\t\t\tfragmentShader:\n        \"precision highp float;\\\n        varying vec2 vUv;\\\n        uniform samplerCube envMap;\\\n        uniform float mapSize;\\\n        uniform vec3 testColor;\\\n        uniform int faceIndex;\\\n        \\\n        void main() {\\\n          vec3 sampleDirection;\\\n          vec2 uv = vUv;\\\n          uv = uv * 2.0 - 1.0;\\\n          uv.y *= -1.0;\\\n          if(faceIndex == 0) {\\\n            sampleDirection = normalize(vec3(1.0, uv.y, -uv.x));\\\n          } else if(faceIndex == 1) {\\\n            sampleDirection = normalize(vec3(uv.x, 1.0, uv.y));\\\n          } else if(faceIndex == 2) {\\\n            sampleDirection = normalize(vec3(uv.x, uv.y, 1.0));\\\n          } else if(faceIndex == 3) {\\\n            sampleDirection = normalize(vec3(-1.0, uv.y, uv.x));\\\n          } else if(faceIndex == 4) {\\\n            sampleDirection = normalize(vec3(uv.x, -1.0, -uv.y));\\\n          } else {\\\n            sampleDirection = normalize(vec3(-uv.x, uv.y, -1.0));\\\n          }\\\n          vec4 color = envMapTexelToLinear( textureCube( envMap, sampleDirection ) );\\\n          gl_FragColor = linearToOutputTexel( color );\\\n        }\",\n\n\t\t\tblending: THREE.NoBlending\n\n\t\t} );\n\n\t\tshaderMaterial.type = 'PMREMCubeUVPacker';\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\n\treturn PMREMCubeUVPacker;\n\n} )();\n\n\nexport const PMREMCubeUVPacker = THREE.PMREMCubeUVPacker","import * as THREE from 'three'\n\n\n/**\n* @author Richard M. / https://github.com/richardmonette\n* @author WestLangley / http://github.com/WestLangley\n*/\n\nTHREE.CubemapGenerator = function ( renderer ) {\n\n\tthis.renderer = renderer;\n\n};\n\nTHREE.CubemapGenerator.prototype.fromEquirectangular = function ( texture, options ) {\n\n\toptions = options || {};\n\n\tvar scene = new THREE.Scene();\n\n\tvar shader = {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader:\n\n\t\t\t`\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t//include <common>\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t\t`,\n\n\t\tfragmentShader:\n\n\t\t\t`\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t//include <common>\n\t\t\t#define RECIPROCAL_PI 0.31830988618\n\t\t\t#define RECIPROCAL_PI2 0.15915494\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV;\n\n\t\t\t\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\t\t\t\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t\t`\n\t};\n\n\tvar material = new THREE.ShaderMaterial( {\n\n\t\ttype: 'CubemapFromEquirect',\n\n\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\tside: THREE.BackSide,\n\t\tblending: THREE.NoBlending\n\n\t} );\n\n\tmaterial.uniforms.tEquirect.value = texture;\n\n\tvar mesh = new THREE.Mesh( new THREE.BoxBufferGeometry( 5, 5, 5 ), material );\n\n\tscene.add( mesh );\n\n\tvar resolution = options.resolution || 512;\n\n\tvar params = {\n\t\ttype: texture.type,\n\t\tformat: texture.format,\n\t\tencoding: texture.encoding,\n\t\tgenerateMipmaps: ( options.generateMipmaps !== undefined ) ? options.generateMipmaps : texture.generateMipmaps,\n\t\tminFilter: ( options.minFilter !== undefined ) ? options.minFilter : texture.minFilter,\n\t\tmagFilter: ( options.magFilter !== undefined ) ? options.magFilter : texture.magFilter\n\t};\n\n\tvar camera = new THREE.CubeCamera( 1, 10, resolution, params );\n\n\tcamera.update( this.renderer, scene );\n\n\tmesh.geometry.dispose();\n\tmesh.material.dispose();\n\n\treturn camera.renderTarget;\n\n};\n\n//\n\nTHREE.EquirectangularToCubeGenerator = ( function () {\n\n\tvar camera = new THREE.PerspectiveCamera( 90, 1, 0.1, 10 );\n\tvar scene = new THREE.Scene();\n\tvar boxMesh = new THREE.Mesh( new THREE.BoxBufferGeometry( 1, 1, 1 ), getShader() );\n\tboxMesh.material.side = THREE.BackSide;\n\tscene.add( boxMesh );\n\n\tvar EquirectangularToCubeGenerator = function ( sourceTexture, options ) {\n\n\t\toptions = options || {};\n\n\t\tthis.sourceTexture = sourceTexture;\n\t\tthis.resolution = options.resolution || 512;\n\n\t\tthis.views = [\n\t\t\t{ t: [ 1, 0, 0 ], u: [ 0, - 1, 0 ] },\n\t\t\t{ t: [ - 1, 0, 0 ], u: [ 0, - 1, 0 ] },\n\t\t\t{ t: [ 0, 1, 0 ], u: [ 0, 0, 1 ] },\n\t\t\t{ t: [ 0, - 1, 0 ], u: [ 0, 0, - 1 ] },\n\t\t\t{ t: [ 0, 0, 1 ], u: [ 0, - 1, 0 ] },\n\t\t\t{ t: [ 0, 0, - 1 ], u: [ 0, - 1, 0 ] },\n\t\t];\n\n\t\tvar params = {\n\t\t\tformat: options.format || this.sourceTexture.format,\n\t\t\tmagFilter: this.sourceTexture.magFilter,\n\t\t\tminFilter: this.sourceTexture.minFilter,\n\t\t\ttype: options.type || this.sourceTexture.type,\n\t\t\tgenerateMipmaps: this.sourceTexture.generateMipmaps,\n\t\t\tanisotropy: this.sourceTexture.anisotropy,\n\t\t\tencoding: this.sourceTexture.encoding\n\t\t};\n\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( this.resolution, this.resolution, params );\n\n\t};\n\n\tEquirectangularToCubeGenerator.prototype = {\n\n\t\tconstructor: EquirectangularToCubeGenerator,\n\n\t\tupdate: function ( renderer ) {\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tboxMesh.material.uniforms.equirectangularMap.value = this.sourceTexture;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar v = this.views[ i ];\n\n\t\t\t\tcamera.position.set( 0, 0, 0 );\n\t\t\t\tcamera.up.set( v.u[ 0 ], v.u[ 1 ], v.u[ 2 ] );\n\t\t\t\tcamera.lookAt( v.t[ 0 ], v.t[ 1 ], v.t[ 2 ] );\n\n\t\t\t\trenderer.setRenderTarget( this.renderTarget, i );\n\t\t\t\trenderer.clear();\n\t\t\t\trenderer.render( scene, camera );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\treturn this.renderTarget.texture;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.renderTarget.dispose();\n\n\t\t}\n\n\t};\n\n\tfunction getShader() {\n\n\t\tvar shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\tuniforms: {\n\t\t\t\t\"equirectangularMap\": { value: null },\n\t\t\t},\n\n\t\t\tvertexShader:\n        \"varying vec3 localPosition;\\n\\\n        \\n\\\n        void main() {\\n\\\n          localPosition = position;\\n\\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n        }\",\n\n\t\t\tfragmentShader:\n        \"#include <common>\\n\\\n        varying vec3 localPosition;\\n\\\n        uniform sampler2D equirectangularMap;\\n\\\n        \\n\\\n        vec2 EquirectangularSampleUV(vec3 v) {\\n\\\n          vec2 uv = vec2(atan(v.z, v.x), asin(v.y));\\n\\\n          uv *= vec2(0.1591, 0.3183); // inverse atan\\n\\\n          uv += 0.5;\\n\\\n          return uv;\\n\\\n        }\\n\\\n        \\n\\\n        void main() {\\n\\\n          vec2 uv = EquirectangularSampleUV(normalize(localPosition));\\n\\\n          gl_FragColor = texture2D(equirectangularMap, uv);\\n\\\n        }\",\n\n\t\t\tblending: THREE.NoBlending\n\n\t\t} );\n\n\t\tshaderMaterial.type = 'EquirectangularToCubeGenerator';\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\treturn EquirectangularToCubeGenerator;\n\n} )();\n\n\nexport const EquirectangularToCubeGenerator = THREE.EquirectangularToCubeGenerator","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadEnvMap.js\nimport * as THREE from 'three'\nimport clamp from 'lodash/clamp'\n// TODO import those from three.js when this issue will be solved\n// https://github.com/mrdoob/three.js/issues/9562\nimport { HDRCubeTextureLoader } from './three/HDRCubeTextureLoader'\nimport { PMREMGenerator } from './three/PMREMGenerator'\nimport { PMREMCubeUVPacker } from './three/PMREMCubeUVPacker'\nimport { EquirectangularToCubeGenerator } from './three/EquirectangularToCubeGenerator'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n  const renderer = options.renderer\n\n  if (!renderer) {\n    throw new Error(`PBR Map requires renderer to passed in the options for ${url}!`)\n  }\n\n  if (options.equirectangular) {\n    const texture = await loadTexture(url, { renderer })\n\n    const cubemapGenerator = new EquirectangularToCubeGenerator(texture, { resolution: 1024 })\n\n    const cubeMapTexture = cubemapGenerator.update(renderer)\n\n    // renderTarget is used for the scene.background\n    cubeMapTexture.renderTarget = cubemapGenerator.renderTarget\n\n    texture.dispose() // dispose original texture\n    texture.image.data = null // remove Image reference\n\n    return buildCubeMap(cubeMapTexture, options)\n  }\n\n  const basePath = url\n\n  const isHDR = options.hdr\n  const extension = isHDR ? '.hdr' : '.png'\n  const urls = genCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n  if (isHDR) {\n    // load a float HDR texture\n    return new Promise((resolve, reject) => {\n      new HDRCubeTextureLoader().load(\n        THREE.UnsignedByteType,\n        urls,\n        map => resolve(buildCubeMap(map, options)),\n        null,\n        () => reject(new Error(`Could not load PBR map: ${basePath}`)),\n      )\n    })\n  }\n\n  // load a RGBM encoded texture\n  return new Promise((resolve, reject) => {\n    new THREE.CubeTextureLoader().load(\n      urls,\n      cubeMap => {\n        cubeMap.encoding = THREE.RGBM16Encoding\n        resolve(buildCubeMap(cubeMap, options))\n      },\n      null,\n      () => reject(new Error(`Could not load PBR map: ${basePath}`)),\n    )\n  })\n}\n\nfunction buildCubeMap(cubeMap, options) {\n  if (options.pbr || typeof options.level === 'number') {\n    // prefilter the environment map for irradiance\n    const pmremGenerator = new PMREMGenerator(cubeMap)\n    pmremGenerator.update(options.renderer)\n    if (options.pbr) {\n      const pmremCubeUVPacker = new PMREMCubeUVPacker(pmremGenerator.cubeLods)\n      pmremCubeUVPacker.update(options.renderer)\n      const target = pmremCubeUVPacker.CubeUVRenderTarget\n      cubeMap = target.texture\n      pmremCubeUVPacker.dispose()\n    } else {\n      const idx = clamp(Math.floor(options.level), 0, pmremGenerator.cubeLods.length)\n      cubeMap = pmremGenerator.cubeLods[idx].texture\n    }\n    pmremGenerator.dispose()\n  }\n  if (options.mapping) cubeMap.mapping = options.mapping\n  return cubeMap\n}\n\nfunction genCubeUrls(prefix, postfix) {\n  return [\n    `${prefix}px${postfix}`,\n    `${prefix}nx${postfix}`,\n    `${prefix}py${postfix}`,\n    `${prefix}ny${postfix}`,\n    `${prefix}pz${postfix}`,\n    `${prefix}nz${postfix}`,\n  ]\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/AssetManager.js\nimport pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\n// TODO import the GLTFLoader from three.js when this issue will be solved\n// https://github.com/mrdoob/three.js/issues/9562\nimport { GLTFLoader } from './three/GLTFLoader'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\n\nclass AssetManager {\n  #queue = []\n  #cache = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager#queue()')\n\n    if (!this._getQueued(url)) {\n      this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    }\n\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find(item => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = url => {\n    if (!url) throw new TypeError('Must specify an URL for AssetManager#get()')\n    if (!(url in this.#cache)) {\n      throw new Error(`Could not find an asset by the URL ${url}`)\n    }\n\n    return this.#cache[url]\n  }\n\n  // Loads a single asset\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function')\n    }\n\n    try {\n      const itemLoadingStart = Date.now()\n\n      this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n          'color:blue',\n          'color:black',\n        )\n      }\n\n      return item.url\n    } catch (err) {\n      delete this.#cache[item.url]\n      console.error(`📦  Could not load ${item.url}:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach(fn => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = Date.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = Date.now()\n\n          this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n              'color:blue',\n              'color:black',\n            )\n          }\n        } catch (err) {\n          this.logError(`Skipping ${item.url} from asset loading:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach(fn => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency },\n    )\n\n    if (window.DEBUG) {\n      this.groupLog(`📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱`)\n    }\n  }\n\n  // Loads a single asset on demand, returning from\n  // cache if it exists otherwise adding it to the cache\n  // after loading.\n  async _loadItem({ url, type, renderer, ...options }) {\n    if (url in this.#cache) {\n      return this.#cache[url]\n    }\n\n    switch (type) {\n      case 'gltf':\n        return new Promise((resolve, reject) => {\n          new GLTFLoader().load(url, resolve, null, err =>\n            reject(new Error(`Could not load GLTF asset ${url}. ${err}`)),\n          )\n        })\n      case 'json':\n        return fetch(url).then(response => response.json())\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then(response => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then(response => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(text) {\n    console.groupCollapsed(text)\n    this.#logs.forEach(log => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd(text)\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine,\n// fucking java patterns\nexport default new AssetManager()\n","import * as THREE from 'three'\nimport assets from '../lib/AssetManager'\n\n// elaborated three.js component example\n// containing example usage of\n//   - asset manager\n//   - control panel\n//   - touch events\n//   - postprocessing\n//   - screenshot saving\n\n// preload the suzanne model\nconst suzanneKey = assets.queue({\n  url: 'assets/suzanne.gltf',\n  type: 'gltf',\n})\n\n// preload the materials\nconst albedoKey = assets.queue({\n  url: 'assets/spotty-metal/albedo.jpg',\n  type: 'texture',\n})\nconst metalnessKey = assets.queue({\n  url: 'assets/spotty-metal/metalness.jpg',\n  type: 'texture',\n})\nconst roughnessKey = assets.queue({\n  url: 'assets/spotty-metal/roughness.jpg',\n  type: 'texture',\n})\nconst normalKey = assets.queue({\n  url: 'assets/spotty-metal/normal.jpg',\n  type: 'texture',\n})\n\n// preload the environment map\nconst hdrKey = assets.queue({\n  url: 'assets/ouside-afternoon-blurred-hdr.jpg',\n  type: 'env-map',\n  // equirectangular means it's just one image, projected\n  equirectangular: true,\n})\n\nexport const DEFAULT_ANGULAR_VELOCITY = 0.5\n\nexport default class Suzanne extends THREE.Group {\n  angularVelocity = DEFAULT_ANGULAR_VELOCITY\n\n  constructor({ webgl, ...options }) {\n    super(options)\n    this.webgl = webgl\n\n    const suzanneGltf = assets.get(suzanneKey)\n    const suzanne = suzanneGltf.scene\n\n    const material = new THREE.MeshStandardMaterial({\n      map: assets.get(albedoKey),\n      metalnessMap: assets.get(metalnessKey),\n      roughnessMap: assets.get(roughnessKey),\n      normalMap: assets.get(normalKey),\n      normalScale: new THREE.Vector2(1.5, 1.5),\n      envMap: assets.get(hdrKey),\n      envMapIntensity: 1,\n    })\n\n    // apply the material to the model\n    suzanne.traverse(child => {\n      if (child.isMesh) {\n        child.material = material\n      }\n    })\n\n    // make it a little bigger\n    suzanne.scale.multiplyScalar(1.2)\n\n    this.add(suzanne)\n\n    // set the background as the hdr\n    this.webgl.scene.background = assets.get(hdrKey).renderTarget\n\n    if (window.DEBUG) {\n      // update the angularVelocity from the control-panel\n      this.webgl.panel.on('input', inputs => {\n        this.angularVelocity = inputs['Angular Velocity']\n      })\n    }\n  }\n\n  onTouchStart(event, pos) {\n    const [x, y] = pos\n\n    // for example, check of we clicked on an\n    // object with raycasting\n    const coords = new THREE.Vector2().set(\n      (x / this.webgl.width) * 2 - 1,\n      (-y / this.webgl.height) * 2 + 1\n    )\n    const raycaster = new THREE.Raycaster()\n    raycaster.setFromCamera(coords, this.webgl.camera)\n    const hits = raycaster.intersectObject(this, true)\n    console.log(hits.length > 0 ? `Hit ${hits[0].object.name}!` : 'No hit')\n  }\n\n  onTouchMove(event, pos) {}\n\n  onTouchEnd(event, pos) {}\n\n  update(dt, time) {\n    this.rotation.y += dt * this.angularVelocity\n  }\n}\n\n// natural hemisphere light from\n// https://threejs.org/examples/#webgl_lights_hemisphere\nexport function addNaturalLight(webgl) {\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6)\n  hemiLight.color.setHSL(0.6, 1, 0.6)\n  hemiLight.groundColor.setHSL(0.095, 1, 0.75)\n  hemiLight.position.set(0, 50, 0)\n  webgl.scene.add(hemiLight)\n\n  const dirLight = new THREE.DirectionalLight(0xffffff, 1)\n  dirLight.color.setHSL(0.1, 1, 0.95)\n  dirLight.position.set(3, 5, 1)\n  dirLight.position.multiplyScalar(50)\n  webgl.scene.add(dirLight)\n\n  dirLight.castShadow = true\n  dirLight.shadow.mapSize.width = 2048\n  dirLight.shadow.mapSize.height = 2048\n\n  var d = 50\n  dirLight.shadow.camera.left = -d\n  dirLight.shadow.camera.right = d\n  dirLight.shadow.camera.top = d\n  dirLight.shadow.camera.bottom = -d\n  dirLight.shadow.camera.far = 3500\n  dirLight.shadow.bias = -0.0001\n}\n\n// demo the save screenshot feature\nexport function addScreenshotButton(webgl) {\n  const screenshotButton = document.createElement('div')\n\n  // normally the styles would be in style.css\n  screenshotButton.style.position = 'fixed'\n  screenshotButton.style.bottom = 0\n  screenshotButton.style.right = 0\n  screenshotButton.style.background = 'tomato'\n  screenshotButton.style.cursor = 'pointer'\n  screenshotButton.style.padding = '8px 16px'\n  screenshotButton.style.color = 'white'\n  screenshotButton.style.fontSize = '24px'\n\n  screenshotButton.textContent = 'Save screenshot'\n  document.body.appendChild(screenshotButton)\n  screenshotButton.addEventListener('click', webgl.saveScreenshot)\n}\n","import * as THREE from 'three'\nimport WebGLApp from './lib/WebGLApp'\nimport assets from './lib/AssetManager'\nimport Suzanne, {\n  addNaturalLight,\n  addScreenshotButton,\n  DEFAULT_ANGULAR_VELOCITY,\n} from './scene/Suzanne'\nimport { ShaderPass } from './lib/three/ShaderPass'\nimport passVert from './scene/shaders/pass.vert'\nimport vignetteFrag from './scene/shaders/vignette.frag'\n\nwindow.DEBUG = window.location.search.includes('debug')\n\n// grab our canvas\nconst canvas = document.querySelector('#app')\n\n// setup the WebGLRenderer\nconst webgl = new WebGLApp({\n  canvas,\n  // enable transparency\n  alpha: true,\n  // set the scene background color\n  background: '#000',\n  backgroundAlpha: 1,\n  // enable postprocessing\n  // ⚠️ Warning! This disables antialiasing for the scene,\n  // at least until WebGL2 comes along in Three.js\n  postprocessing: true,\n  // show the fps counter from stats.js\n  showFps: window.DEBUG,\n  // enable orbit-controls with a z-distance of 5,\n  // it is recommended to keep the distance the same as\n  // the camera distance:\n  // webgl.camera.position.set(0, 0, 5)\n  orbitControls: window.DEBUG && { distance: 5 },\n  // Add the control-panel inputs\n  panelInputs: window.DEBUG && [\n    {\n      type: 'range',\n      label: 'Angular Velocity',\n      min: 0.1,\n      max: 30,\n      initial: DEFAULT_ANGULAR_VELOCITY,\n      scale: 'log',\n    },\n  ],\n  // enable Cannon.js\n  // world: new CANNON.World(),\n  // enable Tween.js\n  // tween: TWEEN,\n})\n\n// attach it to the window to inspect in the console\nif (window.DEBUG) {\n  window.webgl = webgl\n}\n\n// hide canvas\nwebgl.canvas.style.visibility = 'hidden'\n\n// load any queued assets\nassets.load({ renderer: webgl.renderer }).then(() => {\n  // show canvas\n  webgl.canvas.style.visibility = ''\n\n  // move the camera behind\n  webgl.camera.position.set(0, 0, 5)\n\n  // add any \"WebGL components\" here...\n  // append them to the scene so you can\n  // use them from other components easily\n  webgl.scene.suzanne = new Suzanne({ webgl })\n  webgl.scene.add(webgl.scene.suzanne)\n\n  // lights and other scene related stuff\n  addNaturalLight(webgl)\n\n  // postprocessing\n  const vignette = new ShaderPass({\n    vertexShader: passVert,\n    fragmentShader: vignetteFrag,\n    uniforms: {\n      tDiffuse: { type: 't', value: new THREE.Texture() },\n    },\n  })\n  webgl.composer.addPass(vignette)\n\n  // add the save screenshot button\n  if (window.DEBUG) {\n    addScreenshotButton(webgl)\n  }\n\n  // start animation loop\n  webgl.start()\n  webgl.draw()\n})\n","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\\n\""],"sourceRoot":""}